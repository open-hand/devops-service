<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.AppServiceMapper">
    <select id="list" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT da.id,
        da.project_id,
        da.name,
        da.code,
        da.type,
        da.is_active,
        da.is_synchro,
        da.gitlab_project_id,
        da.uuid,
        da.is_failed,
        da.creation_date,
        da.created_by,
        da.last_updated_by,
        da.last_update_date,
        da.error_message,
        da.group_id,
        da.artifact_id
        FROM devops_app_service da
        WHERE da.project_id = #{projectId}
        <if test="isActive != null">
            <if test="isActive">
                AND da.is_active = TRUE
            </if>
            <if test="!isActive">
                AND da.is_active = FALSE
            </if>
        </if>
        <if test="type != null">
            AND da.type = #{type}
        </if>
        <if test="hasVersion != null">
            <if test="hasVersion">
                AND EXISTS(SELECT 1 FROM devops_app_service_version dav WHERE dav.app_service_id = da.id)
            </if>
            <if test="!hasVersion">
                AND NOT EXISTS(SELECT 1 FROM devops_app_service_version dav WHERE dav.app_service_id = da.id)
            </if>
        </if>
        <include refid="sqlparam"/>
        <if test="index != ''">
            ORDER BY da.is_active DESC,
            da.id DESC
        </if>
    </select>

    <select id="listProjectMembersAppService" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT da.id,
        da.project_id,
        da.name,
        da.code,
        da.type,
        da.is_active,
        da.is_synchro,
        da.gitlab_project_id,
        da.uuid,
        da.is_failed,
        da.creation_date,
        da.created_by,
        da.last_updated_by,
        da.last_update_date,
        da.error_message,
        da.group_id,
        da.artifact_id
        FROM devops_app_service da
        <where>
            da.project_id = #{projectId}
            <if test="isActive != null">
                <if test="isActive">
                    AND da.is_active = TRUE
                </if>
                <if test="!isActive">
                    AND da.is_active = FALSE
                </if>
            </if>
            <if test="type != null">
                AND da.type = #{type}
            </if>
            <if test="hasVersion != null">
                <if test="hasVersion">
                    AND EXISTS(SELECT 1 FROM devops_app_service_version dav WHERE dav.app_service_id = da.id)
                </if>
                <if test="!hasVersion">
                    AND NOT EXISTS(SELECT 1 FROM devops_app_service_version dav WHERE dav.app_service_id = da.id)
                </if>
            </if>
            <if test="appServiceIds != null and appServiceIds.size > 0">
                and da.id in
                <foreach collection="appServiceIds" item="appServiceId" index="index"
                         open="(" close=")" separator=",">
                    #{appServiceId}
                </foreach>
            </if>
            <include refid="sqlparam"/>
        </where>
        <if test="doSort">
            ORDER BY da.is_active desc,
            (
            da.is_synchro = 1
            AND da.gitlab_project_id IS NOT NULL
            )
            OR da.is_synchro = 0 DESC,
            da.id desc
        </if>
    </select>
    <select id="listByProjectId" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT da.id,
        da.project_id,
        da.NAME,
        da.is_synchro,
        da.is_failed,
        da.is_active,
        da.CODE,
        EXISTS(
        SELECT 1
        FROM devops_app_service_version dasv
        WHERE dasv.app_service_id = da.id
        ) AS version
        FROM devops_app_service da
        WHERE
        da.project_id = #{projectId}
        <include refid="sqlparam"/>
        ORDER BY version != 1,
        da.id DESC
    </select>

    <select id="listByEnvId" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT DISTINCT da.id,
        da.`code`,
        da.`name`,
        da.project_id project_id
        FROM devops_app_service da
        JOIN devops_app_service_instance dai ON dai.app_service_id = da.id
        JOIN devops_env de ON de.id = dai.env_id
        WHERE
        de.project_id = #{projectId}
        AND de.type = 'user'
        <if test="status != null">
            AND dai.status = #{status}
        </if>
        AND de.id = #{envId}
        <if test="appServiceId != null and appServiceId != ''">
            ORDER BY da.id not in (#{appServiceId}), da.id ASC
        </if>
    </select>

    <sql id="listByActive">
        SELECT das.*, (SELECT COUNT(1) = 0 FROM devops_branch db WHERE db.app_service_id = das.id) AS empty_repository
        FROM devops_app_service das
        WHERE das.is_active IS TRUE
        AND das.is_synchro IS TRUE
        AND das.gitlab_project_id IS NOT NULL
        AND das.project_id = #{projectId}
    </sql>

    <sql id="listProjectMembersAppServiceByActive">
        SELECT da.*, (SELECT COUNT(1) = 0 FROM devops_branch db WHERE db.app_service_id = da.id) AS empty_repository
        FROM devops_app_service da
        WHERE da.is_active IS TRUE
        AND da.is_synchro IS TRUE
        AND da.gitlab_project_id IS NOT NULL
        <if test="appServiceIds != null and appServiceIds.size > 0">
            and da.id in
            <foreach collection="appServiceIds" item="appServiceId" index="index"
                     open="(" close=")" separator=",">
                #{appServiceId}
            </foreach>
        </if>
    </sql>

    <select id="listByActive" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        <include refid="listByActive"/>
    </select>

    <select id="countByActive" resultType="integer">
        SELECT count(1) FROM(
        <include refid="listByActive"/>
        ) as result
    </select>

    <select id="listProjectMembersAppServiceByActive" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        <include refid="listProjectMembersAppServiceByActive"/>
    </select>

    <select id="countProjectMembersAppServiceByActive" resultType="integer">
        SELECT count(1) FROM (
        <include refid="listProjectMembersAppServiceByActive"/>
        ) as result
    </select>

    <select id="listDeployedApp" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT DISTINCT dam.share_level publishLevel,
        da.*
        FROM devops_app_service da
        JOIN devops_app_service_instance dai ON dai.app_service_id = da.id
        AND dai.`status` != 'deleted'
        JOIN devops_env de ON dai.env_id = de.id
        LEFT JOIN devops_app_service_share_rule dam ON dam.app_service_id = da.id
        WHERE da.is_active
        AND de.project_id = #{projectId}
        AND de.type = 'user'
        ORDER BY dam.share_level ASC,
        da.id DESC
    </select>

    <select id="listAll" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT DISTINCT da.*
        FROM devops_app_service da
        JOIN devops_app_service_instance dai ON dai.app_service_id = da.id
        AND dai.`status` != 'deleted'
        JOIN devops_env de ON dai.env_id = de.id
        WHERE da.is_active
        AND de.project_id = #{projectId}
        <if test="appServiceName != null and appServiceName != ''">
            AND  da.NAME = #{appServiceName,jdbcType=VARCHAR}
        </if>
        ORDER BY da.id DESC
    </select>


    <select id="listAllAppServiceIds" resultType="java.lang.Long">
        SELECT DISTINCT da.id
        FROM devops_app_service da
        WHERE da.is_active
          AND da.project_id=#{projectId,jdbcType=BIGINT}
    </select>

    <sql id="sqlparam">
        <if test='searchParam != null'>
            <if test='searchParam.code != null and searchParam.code.length > 0'>
                AND da.code LIKE CONCAT(CONCAT('%', #{searchParam.code, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.type != null'>
                <if test='searchParam.type == 0'>
                    AND da.type = 'normal'
                </if>
                <if test="searchParam.type == 1">
                    AND da.type = 'test'
                </if>
            </if>
            <if test='searchParam.name != null and searchParam.name.length > 0'>
                AND
                da.name LIKE CONCAT(CONCAT('%', #{searchParam.name, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.active != null'>
                <if test='searchParam.active == -1'>
                    AND da.is_failed = 1
                </if>
                <if test="searchParam.active == 0">
                    AND da.is_active = 0
                </if>
                <if test="searchParam.active == 1">
                    AND da.is_active = 1
                    AND da.is_synchro = 1
                    AND da.is_failed = 0
                </if>
                <if test="searchParam.active == 2">
                    AND da.is_synchro = 0
                    AND da.is_failed = 0
                </if>
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                (da.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR da.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                )
            </foreach>
        </if>
    </sql>


    <sql id="sqlparams">
        <if test="searchParam != null">
            <if test="searchParam.name != null and searchParam.name != ''">
                AND name LIKE CONCAT(CONCAT('%', #{searchParam.name, jdbcType=VARCHAR}),'%')
            </if>
            <if test="searchParam.code != null and searchParam.code != ''">
                AND code LIKE CONCAT(CONCAT('%', #{searchParam.code, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.status != null'>
                AND
                <if test='searchParam.status == "失败"'>
                    is_failed = 1
                </if>
                <if test="searchParam.status == '停用'">
                    is_active = 0
                </if>
                <if test="searchParam.status == '启用'">
                    is_active = 1
                    AND is_synchro = 1
                    AND is_failed = 0
                </if>
                <if test="searchParam.status == '创建中'">
                    is_synchro = 0
                    AND is_failed = 0
                </if>
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                type LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
            </foreach>
        </if>
    </sql>

    <select id="basePageByActiveAndPubAndHasVersion" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT da.`id`,
        da.`code`,
        da.`name`
        FROM devops_app_service da
        WHERE
        da.project_id = #{projectId}
        AND da.is_active = #{active}
        AND ((select count(1) from devops_app_service_share_rule dam where da.id = dam.app_service_id) = 0)
        AND ((select count(1) from devops_app_service_version dav where da.id = dav.app_service_id) > 0)
        AND da.type = 'normal'
        <include refid="sqlparam"/>
    </select>

    <select id="queryByToken" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT da.id,
        da.project_id,
        da.name,
        da.code,
        da.is_active,
        da.is_synchro,
        da.gitlab_project_id,
        da.harbor_config_id,
        da.chart_config_id,
        da.uuid,
        da.token,
        da.object_version_number
        FROM devops_app_service da
        WHERE da.token = #{token}
    </select>

    <select id="listByCode" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT da.`id`,
        da.project_id
        FROM devops_app_service da
        JOIN devops_app_service_share_rule dam ON da.id = dam.app_service_id
        WHERE da.code = #{code}
    </select>

    <select id="listByGitLabProjectIds" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT da.gitlab_project_id
        FROM devops_app_service da
        WHERE da.gitlab_project_id IN
        <foreach collection="gitlabProjectIds" item="gitlabProjectId" open="(" close=")" separator=",">
            #{gitlabProjectId}
        </foreach>
    </select>


    <update id="updateAppToSuccess" parameterType="io.choerodon.devops.infra.dto.AppServiceDTO">
        UPDATE devops_app_service da
        set da.is_failed = null
        where da.id = #{appServiceId}
    </update>

    <update id="updateApplicationStatus" parameterType="io.choerodon.devops.infra.dto.AppServiceDTO">
        UPDATE devops_app_service da
        set da.is_failed = null,
        da.token=#{token},
        da.gitlab_project_id=#{gitlabProjectId},
        da.hook_id=#{hookId},
        da.is_synchro=#{isSynchro}
        where da.id = #{appServiceId}
    </update>

    <update id="updateHarborConfig" parameterType="io.choerodon.devops.infra.dto.AppServiceDTO">
        UPDATE devops_app_service da
        <if test='harborPrivate != null'>
            <if test='harborPrivate == true'>
                set da.harbor_config_id = #{newConfigId}
                where (da.harbor_config_id = #{oldConfigId} or da.harbor_config_id is null)
            </if>
            <if test='harborPrivate == false'>
                set da.harbor_config_id = #{newConfigId}
                where da.harbor_config_id = #{oldConfigId}
            </if>
        </if>
        AND da.project_id = #{projectId}
    </update>


    <update id="updateHarborConfigNullByConfigId">
        UPDATE devops_app_service da
        set da.harbor_config_id = null
        where da.harbor_config_id = #{harborConfigId}
    </update>

    <update id="updateChartConfigNullByConfigId">
        UPDATE devops_app_service da
        set da.chart_config_id = null
        where da.chart_config_id = #{chartConfigId}
    </update>


    <update id="updateHarborConfigNullByServiceId">
        UPDATE devops_app_service da
        set da.harbor_config_id = null
        where da.id = #{appServiceId}
    </update>

    <update id="updateChartConfigNullByServiceId">
        UPDATE devops_app_service da
        set da.chart_config_id = null
        where da.id = #{appServiceId}
    </update>

    <select id="queryByCodeWithNoProject" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT da.*
        FROM devops_app_service da
        WHERE da.code = #{code}
        AND da.project_id is null
    </select>

    <select id="listShareApplicationService" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        (SELECT DISTINCT da.id,
        da.`code`,
        da.`name`,
        da.project_id,
        da.chart_config_id,
        da.harbor_config_id
        FROM devops_app_service_share_rule dasr
        JOIN devops_app_service da ON dasr.app_service_id = da.id
        WHERE
        dasr.share_level = 'organization'
        AND da.is_active = TRUE
        <include refid="appServiceSqlParam"/>
        )
        UNION
        (
        SELECT DISTINCT da.id,
        da.`code`,
        da.`name`,
        da.project_id,
        da.chart_config_id,
        da.harbor_config_id
        FROM devops_app_service da
        LEFT JOIN (SELECT app_service_id, project_id
        FROM devops_app_service_share_rule
        WHERE share_level = 'project'
        ) dasr ON da.id = dasr.app_service_id
        WHERE
        dasr.app_service_id IS NOT NULL
        AND da.is_active = TRUE
        <if test="projectId != null and projectId != ''">
            AND dasr.project_id = #{projectId}
        </if>
        <include refid="appServiceSqlParam"/>
        )
    </select>
    <sql id="appServiceSqlParam">
        <if test="appServiceIds != null and appServiceIds.size > 0">
            AND
            dasr.app_service_id in
            <foreach collection="appServiceIds" item="appServiceId" open="(" close=")" separator=",">
                #{appServiceId}
            </foreach>
        </if>
        <if test="type != null">
            AND da.type = #{type}
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                (da.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR da.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%') )
            </foreach>
        </if>
    </sql>
    <select id="queryOrganizationShareApps" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT das.id,
        das.project_id,
        das.`name`,
        das.CODE,
        das.type,
        das.mkt_app_id
        FROM devops_app_service das
        LEFT JOIN devops_app_service_share_rule b ON das.id = b.app_service_id
        <where>
            <if test='projectIds != null and projectIds.size > 0'>
                das.project_id in
                <foreach collection="projectIds" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            and
            ((b.share_level = 'organization' and b.app_service_id IS NOT NULL) or
            (b.project_id = #{projectId} and b.share_level = 'project'))
            <if test="param != null and param != ''">
                AND (das.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}), '%')
                OR das.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}), '%'))
            </if>
        </where>
    </select>

    <!--<select id="queryMarketDownloadApps" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">-->
    <!--SELECT DISTINCT-->
    <!--das.id,-->
    <!--das.project_id,-->
    <!--das.`name`,-->
    <!--das.CODE,-->
    <!--das.type,-->
    <!--das.mkt_app_id-->
    <!--FROM-->
    <!--devops_app_service das-->
    <!--JOIN devops_app_service_version dasv ON dasv.app_service_id = das.id-->
    <!--<choose>-->
    <!--<when test="deployOnly!=null and deployOnly==true">-->
    <!--AND dasv.`repository` IS NOT NULL-->
    <!--</when>-->
    <!--<otherwise>-->
    <!--AND dasv.`commit` IS NOT NULL-->
    <!--</otherwise>-->
    <!--</choose>-->
    <!--WHERE-->
    <!--das.project_id IS NULL-->
    <!--<if test="searchProjectId != null and searchProjectId !=''">-->
    <!--AND das.mkt_app_id = #{searchProjectId}-->
    <!--</if>-->
    <!--<if test="type != null and type != ''">-->
    <!--AND das.type = #{type}-->
    <!--</if>-->
    <!--<if test="param != null and param != ''">-->
    <!--AND  (das.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')-->
    <!--OR  das.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%'))-->
    <!--</if>-->
    <!--</select>-->

    <select id="listAppServiceByIds" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        select *
        from devops_app_service
        <where>
            <if test="ids != null and ids.size > 0">
                AND
                <foreach collection="ids" item="id" open="(" separator=" OR " close=")">
                    id = #{id}
                </foreach>
            </if>
            <include refid="sqlparams"/>
        </where>
        ORDER BY id desc
    </select>


    <select id="pageServiceByProjectId" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        select *
        from devops_app_service
        <where>
            project_id = #{projectId}
            <include refid="sqlparams"/>
        </where>
    </select>

    <select id="listServiceByVersionIds" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        select DISTINCT das.*
        from devops_app_service das
        JOIN devops_app_service_version dasv ON dasv.app_service_id = das.id
        where dasv.id is not null
        <if test="ids != null and ids.size > 0">
            AND
            <foreach collection="ids" item="id" open="(" separator=" OR " close=")">
                dasv.id = #{id}
            </foreach>
        </if>
    </select>

    <update id="updateIsFailedNullToFalse">
        UPDATE devops_app_service das
        SET das.is_failed = 0
        WHERE das.is_failed IS NULL
    </update>

    <update id="updateIsSynchroToTrueWhenFailed">
        UPDATE devops_app_service das
        SET das.is_synchro = 1
        WHERE das.is_failed = 1
    </update>

    <update id="updateIsActiveNullToTrue">
        UPDATE devops_app_service das
        SET das.is_active = 1
        WHERE das.is_active IS NULL
    </update>

    <update id="updateByIdSelectiveWithoutAudit" parameterType="io.choerodon.devops.infra.dto.AppServiceDTO">
        UPDATE devops_app_service
        <set>
            <if test="appService.projectId != null">
                project_id = #{appService.projectId,jdbcType=BIGINT},
            </if>
            <if test="appService.name != null">
                `name` = #{appService.name,jdbcType=VARCHAR},
            </if>
            <if test="appService.code != null">
                code = #{appService.code,jdbcType=VARCHAR},
            </if>
            <if test="appService.type != null">
                `type` = #{appService.type,jdbcType=VARCHAR},
            </if>
            <if test="appService.active != null">
                is_active = #{appService.active,jdbcType=TINYINT},
            </if>
            <if test="appService.synchro != null">
                is_synchro = #{appService.synchro,jdbcType=TINYINT},
            </if>
            <if test="appService.failed != null">
                is_failed = #{appService.failed,jdbcType=TINYINT},
            </if>
            <if test="appService.imgUrl != null">
                img_url = #{appService.imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="appService.gitlabProjectId != null">
                gitlab_project_id = #{appService.gitlabProjectId,jdbcType=BIGINT},
            </if>
            <if test="appService.hookId != null">
                hook_id = #{appService.hookId,jdbcType=BIGINT},
            </if>
            <if test="appService.harborConfigId != null">
                harbor_config_id = #{appService.harborConfigId,jdbcType=BIGINT},
            </if>
            <if test="appService.chartConfigId != null">
                chart_config_id = #{appService.chartConfigId,jdbcType=BIGINT},
            </if>
            <if test="appService.uuid != null">
                uuid = #{appService.uuid,jdbcType=VARCHAR},
            </if>
            <if test="appService.mktAppId != null">
                mkt_app_id = #{appService.mktAppId,jdbcType=BIGINT},
            </if>
            <if test="appService.token != null">
                token = #{appService.token,jdbcType=CHAR},
            </if>
        </set>
        WHERE id = #{appService.id,jdbcType=BIGINT}
    </update>

    <update id="updatePomFields">
        UPDATE devops_app_service
        SET group_id = #{groupId},
            artifact_id = #{artifactId}
        WHERE id = #{id}
    </update>


    <select id="queryAppServicesHavingVersions" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT DISTINCT (das.id), das.name, das.code
        FROM devops_app_service das
        WHERE das.project_id = #{projectId,jdbcType=BIGINT}
        AND das.is_active = TRUE
        AND das.type = 'normal'
    </select>

    <select id="listAppServiceToCreatePipelineForOwner"
            resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT das.id, das.name, das.code, das.type
        FROM devops_app_service das
        LEFT JOIN devops_cicd_pipeline dcp ON das.id = dcp.app_service_id
        LEFT JOIN devops_ci_stage dcs on dcs.ci_pipeline_id = dcp.id
        INNER JOIN devops_branch db ON das.id = db.app_service_id
        WHERE das.project_id = #{projectId,jdbcType=BIGINT}
        AND das.is_failed = FALSE
        AND das.is_synchro = TRUE
        AND das.is_active = TRUE
        AND dcp.id IS NULL
        AND db.branch_name = 'master'
        <include refid="appServiceCiSqlparams"/>
    </select>

    <select id="listAppServiceToCreatePipelineForMember"
            resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT das.id, das.name, das.code, das.type
        FROM devops_app_service das
        LEFT JOIN devops_cicd_pipeline dcp ON das.id = dcp.app_service_id
        LEFT JOIN devops_ci_stage dcs on dcs.ci_pipeline_id = dcp.id
        INNER JOIN devops_branch db ON das.id = db.app_service_id
        WHERE das.project_id = #{projectId,jdbcType=BIGINT}
        AND das.is_failed = FALSE
        AND das.is_synchro = TRUE
        AND das.is_active = TRUE
        AND dcp.id IS NULL
        AND db.branch_name = 'master'
        <if test="appServiceIds != null and appServiceIds.size > 0">
            and das.id in
            <foreach collection="appServiceIds" item="appServiceId" index="index"
                     open="(" close=")" separator=",">
                #{appServiceId}
            </foreach>
        </if>
        <include refid="appServiceCiSqlparams"/>
    </select>

    <sql id="appServiceCiSqlparams">
        <if test="searchParam != null">
            <if test="searchParam.name != null and searchParam.name != ''">
                AND das.name LIKE CONCAT(CONCAT('%', #{searchParam.name, jdbcType=VARCHAR}),'%')
            </if>
            <if test="searchParam.code != null and searchParam.code != ''">
                AND das.code LIKE CONCAT(CONCAT('%', #{searchParam.code, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.status != null'>
                AND
                <if test='searchParam.status == "失败"'>
                    das.is_failed = 1
                </if>
                <if test="searchParam.status == '停用'">
                    das.is_active = 0
                </if>
                <if test="searchParam.status == '启用'">
                    das.is_active = 1
                    AND das.is_synchro = 1
                    AND das.is_failed = 0
                </if>
                <if test="searchParam.status == '创建中'">
                    das.is_synchro = 0
                    AND das.is_failed = 0
                </if>
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                das.type LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR das.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR das.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
            </foreach>
        </if>
    </sql>

    <select id="listLatestUseAppServiceIdAndDate" resultType="io.choerodon.devops.api.vo.LatestAppServiceVO">
        SELECT id, last_update_date
        FROM devops_app_service
        WHERE last_updated_by = #{userId}
        AND last_update_date <![CDATA[>]]> #{time}
        AND devops_app_service.project_id IN
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId}
        </foreach>
    </select>

    <select id="listByActiveAndProjects" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT das.*
        FROM devops_app_service das
        WHERE das.is_active IS TRUE
        AND das.is_synchro IS TRUE
        AND das.gitlab_project_id IS NOT NULL
        AND das.project_id IN
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId}
        </foreach>
    </select>

    <select id="countByProjectIds" resultType="io.choerodon.devops.api.vo.ProjectAppSvcCountVO">
        SELECT das.project_id, COUNT(*) AS app_svc_num
        FROM devops_app_service das
        WHERE das.project_id IN
        <foreach collection="projectIds" item="id" open="(" separator="," close=")" index="i">
            #{id}
        </foreach>
        GROUP BY das.project_id
    </select>

    <select id="listAppServiceByIdsWithParam" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT *
        FROM devops_app_service das
        WHERE
        das.is_active IS TRUE
        AND das.is_synchro IS TRUE
        AND das.gitlab_project_id IS NOT NULL
        AND
        das.id IN
        <foreach collection="appServiceIds" item="appServiceId" open="(" close=")" separator=",">
            #{appServiceId}
        </foreach>
        <if test="param != null and param !=''">
            AND
            (das.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
            OR das.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
            )
        </if>
    </select>
    <select id="selectWithEmptyRepositoryByPrimaryKey" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT das.*, (SELECT COUNT(1) = 0 FROM devops_branch db WHERE db.app_service_id = das.id) AS empty_repository
        FROM devops_app_service das
        WHERE
            das.id=#{appServiceId}
          AND das.is_active IS TRUE
          AND das.is_synchro IS TRUE
          AND das.gitlab_project_id IS NOT NULL
    </select>

    <select id="inProjectsAndHavingVersion" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        select das.id, das.project_id
        from devops_app_service das
                 inner join devops_app_service_version dasv on das.id = dasv.app_service_id
        where dasv.version = #{version}
          and das.code = #{appServiceCode}
          and das.project_id in
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId}
        </foreach>
    </select>

    <select id="queryResourceById" resultType="io.choerodon.devops.api.vo.iam.ResourceVO">
        SELECT
            das.project_id as projectId,
            count( * ) as currentAppService,
            ( SELECT count( * ) FROM devops_cluster dc WHERE dc.project_id = das.project_id ) as currentCluster,
            ( SELECT count( * ) FROM devops_env de WHERE de.project_id = das.project_id ) as currentEnv
        FROM
            devops_app_service das
        WHERE
            das.project_id = #{projectId}
        GROUP BY
            das.project_id
    </select>

    <select id="listShareAppServiceHavingVersion" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT da.id, da.`code`, da.`name`, da.project_id, da.chart_config_id, da.harbor_config_id
        FROM (SELECT distinct dasv.app_service_id
              FROM devops_app_service_version dasv
                       INNER JOIN (SELECT dasr.id, dasr.app_service_id, dasr.version_type, dasr.version
                                   FROM devops_app_service_share_rule dasr
                                            INNER JOIN (SELECT das.id
                                                        FROM devops_app_service das
                                                        WHERE das.project_id
                                                            IN (
                                                                <foreach collection="projectIds" separator="," item="projectId">
                                                                    #{projectId}
                                                                </foreach>
                                                                  )
                                                          AND das.is_active = true) dastmp ON dasr.app_service_id = dastmp.id
                                   WHERE dasr.share_level = 'organization'
                                      OR (dasr.share_level = 'project' AND dasr.project_id = #{currentProjectId})) rule
                                  ON dasv.app_service_id = rule.app_service_id
              WHERE dasv.version = rule.version
                 OR (rule.version_type is not null AND dasv.version like CONCAT('%', CONCAT(rule.version_type, '%')))) ids
                 INNER JOIN devops_app_service da ON ids.app_service_id = da.id
        <where>
            <if test="type != null">
                AND da.type = #{type}
            </if>
            <if test='params != null and params.size > 0'>
                AND
                <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                    (da.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                    OR da.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%') )
                </foreach>
            </if>
        </where>
    </select>
    <select id="listByProjectIdsAndCodes" resultType="io.choerodon.devops.api.vo.AppServiceSimpleVO">
        select
        das.project_id, das.code as app_service_code, das.name as app_service_name
        from devops_app_service das
        <where>
            das.project_id in
            <foreach collection="projectIds" item="projectId" open="(" close=")" index="i" separator=",">
                #{projectId}
            </foreach>
            <if test="codes != null and codes.size() > 0">
                and das.code in
                <foreach collection="codes" item="code" open="(" close=")" index="i" separator=",">
                    #{code}
                </foreach>
            </if>
        </where>
    </select>

    <select id="queryApplicationCenter" resultType="io.choerodon.devops.api.vo.AppServiceRepVO">

        SELECT
           *
        FROM
        (
            SELECT
               any_value ( deas.app_service_id ) AS ID,
               any_value ( deas.source ) AS source,
               any_value ( deas.service_name ) AS serviceName,
               any_value ( deas.service_code ) AS serviceCode,
               any_value ( deas.env_id ) AS envId,
               any_value ( deas.id ) AS tempId
            FROM
              devops_env_app_service deas
            JOIN devops_env de ON deas.env_id = de.id
            WHERE
              de.project_id=#{projectId,jdbcType=BIGINT}
              <if test="envId != null and envId !=0">
                  AND  deas.env_id = #{envId,jdbcType=BIGINT}
              </if>
              <if test="type != null and type != '' and type != 'all'">
                  AND deas.source= #{type}
              </if>
              <if test="params != null and params != ''">
                  AND  (
                  deas.service_name LIKE CONCAT(CONCAT('%', #{params, jdbcType=VARCHAR}),'%')
                  or
                  deas.service_code LIKE CONCAT(CONCAT('%', #{params, jdbcType=VARCHAR}),'%')
                  )
              </if>
            GROUP BY
              ID
        ) temp
        ORDER BY
             temp.tempId DESC

    </select>
</mapper>
