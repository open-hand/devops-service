<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.DevopsBranchMapper">
    <resultMap id="DevopsBranchDTOWithIssueIds" type="io.choerodon.devops.infra.dto.DevopsBranchDTO">
        <id property="id" column="id"/>
        <collection property="issueIds" ofType="java.lang.Long">
            <result column="issue_id"/>
        </collection>
    </resultMap>

    <select id="queryByAppAndBranchName" resultType="io.choerodon.devops.infra.dto.DevopsBranchDTO">
        SELECT db.*
        FROM devops_branch db
        WHERE db.app_service_id = #{appServiceId}
          and db.branch_name = #{branchName}
        ORDER BY db.creation_date DESC
        LIMIT 1
    </select>

    <select id="list" resultType="io.choerodon.devops.infra.dto.DevopsBranchDTO">
        SELECT db.*
        FROM devops_branch db
        <where>
            <if test="issueId !=null">
        NOT EXISTS(
                SELECT *
                FROM devops_issue_rel dir
                WHERE dir.object_id = db.id
                  AND dir.issue_id = #{issueId}
                  AND dir.object = 'branch'
                )
            </if>
                  AND db.app_service_id = #{appServiceId}
        <if test='searchParam != null'>
            <if test='searchParam.branchName != null and searchParam.branchName.length > 0'>
                AND db.branch_name LIKE CONCAT(CONCAT('%', #{searchParam.branchName, jdbcType=VARCHAR}), '%')
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                db.branch_name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}), '%')
            </foreach>
        </if>
        ORDER BY
        <if test="sortString != null and sortString != ''">
            ${sortString},
        </if>
        db.branch_name = 'master' DESC,
        db.id DESC
        </where>
    </select>

    <delete id="deleteByIsDelete">
        delete
        from devops_branch
        where is_deleted = true
    </delete>

    <delete id="deleteDuplicateBranch">
        DELETE
        FROM devops_branch
        WHERE (app_service_id, branch_name) IN (
                SELECT t.app_service_id,
                       t.branch_name
                FROM (SELECT app_service_id, branch_name
                      FROM devops_branch
                      GROUP BY app_service_id, branch_name
                      HAVING count(1) > 1) t
                )
          AND id NOT IN (
                SELECT dt.id
                FROM (SELECT max(id) AS id
                      FROM devops_branch
                      GROUP BY app_service_id, branch_name
                      HAVING count(1) > 1) dt
                )
    </delete>

    <delete id="deleteByAppServiceId">
        DELETE
        FROM devops_branch
        WHERE app_service_id = #{appServiceId}
    </delete>
    <update id="updateBranchById" parameterType="io.choerodon.devops.infra.dto.DevopsBranchDTO">
        update
                devops_branch
        set issue_id=#{devopsBranchDTO.issueId}
        where id = #{devopsBranchDTO.id}
    </update>

    <select id="listLatestUseAppServiceIdAndDate" resultType="io.choerodon.devops.api.vo.LatestAppServiceVO">
        SELECT db.app_service_id AS id, max(db.last_update_date) AS last_update_date
        FROM devops_branch db
                     JOIN devops_app_service das ON db.app_service_id = das.id
                WHERE db.last_updated_by = #{userId} AND db.last_update_date > #{time}
                  AND das.project_id IN
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId}
        </foreach>
        GROUP BY db.app_service_id, db.last_update_date
    </select>

    <select id="listByIssueIdAndOrderByProjectId" resultType="io.choerodon.devops.infra.dto.DevopsBranchDTO">
        SELECT db.*,das.project_id FROM
            devops_branch db
            JOIN devops_app_service das on db.app_service_id = das.id
            JOIN devops_issue_rel dir ON dir.object_id=db.id
        WHERE dir.object='branch'
        AND dir.issue_id=#{issueId}
        ORDER BY das.project_id
    </select>

    <select id="listBranchBoundWithIssue" resultType="io.choerodon.devops.infra.dto.DevopsBranchDTO">
        SELECT db.*
        FROM devops_branch db
        WHERE db.issue_id IS NOT NULL
    </select>

    <select id="countBranchBoundWithIssue" resultType="int">
        SELECT COUNT(*)
        FROM devops_branch db
        WHERE db.issue_id IS NOT NULL
    </select>

    <select id="queryByAppAndBranchNameWithIssueIds" resultMap="DevopsBranchDTOWithIssueIds">
        SELECT db.id,
               dsr.issue_id AS issue_id
        FROM devops_branch db
                  LEFT JOIN devops_issue_rel dsr ON dsr.object_id = db.id
        WHERE db.app_service_id = #{appServiceId}
          AND db.branch_name = #{branchName}
    </select>

    <select id="queryByAppAndBranchIdWithIssueId" resultMap="DevopsBranchDTOWithIssueIds">
        SELECT db.id,
        dsr.issue_id AS issue_id
        FROM devops_branch db
        LEFT JOIN devops_issue_rel dsr ON dsr.object_id = db.id
        WHERE db.app_service_id = #{appServiceId}
        AND db.id = #{branchId}
    </select>

    <select id="listByCommitIds" resultType="io.choerodon.devops.infra.dto.DevopsBranchDTO">
        SELECT db.id, dgc.id AS commitId, das.code AS app_service_code, das.project_id AS project_id
        FROM devops_gitlab_commit dgc
                     INNER JOIN devops_branch db ON db.branch_name = dgc.ref AND db.app_service_id = dgc.app_service_id
                     INNER JOIN devops_app_service das ON das.id = db.app_service_id
                WHERE
                dgc.id IN
        <foreach collection="commitIds" item="commitId" open="(" close=")" separator=",">
            #{commitId}
        </foreach>
    </select>

    <select id="listExistBranchIds" resultType="java.lang.Long">
        SELECT id FROM devops_branch db
        WHERE db.id IN
        <foreach collection="branchIds" item="branchId" open="(" close=")" separator=",">
            #{branchId}
        </foreach>
    </select>

    <select id="listByIds" resultType="io.choerodon.devops.infra.dto.DevopsBranchDTO">
        SELECT db.id, das.code AS app_service_code, das.project_id AS project_id
        FROM devops_branch db
                     INNER JOIN devops_app_service das ON das.id = db.app_service_id
                WHERE db.id IN
        <foreach collection="branchIds" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
</mapper>
