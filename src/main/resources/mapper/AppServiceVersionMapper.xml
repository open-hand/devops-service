<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.AppServiceVersionMapper">
    <select id="listByOptions" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT
        dav.id,
        dav.version,
        dav.creation_date
        FROM
        devops_app_service_version dav
        WHERE
        dav.app_service_id = #{appServiceId}
        AND dav.repository IS NOT NULL
        <if test='searchParam != null'>
            <if test='searchParam.version != null and searchParam.version.length > 0'>
                AND
                dav.version LIKE CONCAT(CONCAT('%', #{searchParam.version, jdbcType=VARCHAR}),'%')
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                dav.version LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
            </foreach>
        </if>
    </select>

    <select id="listByAppServiceId" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT
        dav.id,
        dav.version,
        dav.creation_date
        FROM
        devops_app_service_version dav
        WHERE
        dav.app_service_id = #{appServiceId}
        <if test="param != null and param != ''">
            and dav.version LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
        </if>
        AND dav.repository IS NOT NULL
        ORDER BY
        dav.id DESC
    </select>

    <select id="listAppNewestVersion" resultType="io.choerodon.devops.infra.dto.AppServiceLatestVersionDTO">
        SELECT
        dap.version,
        dap.id versionId,
        lv.app_service_id
        FROM
        devops_app_service_version dap
        JOIN (
        SELECT
        MAX( dappv.id ) id,
        dappv.app_service_id
        FROM
        devops_app_service_version dappv
        GROUP BY
        dappv.app_service_id
        ) lv ON lv.id = dap.id
        JOIN devops_app_service da ON lv.app_service_id = da.id
        LEFT JOIN devops_app_service_share_rule dam on dam.app_service_id = da.id
        WHERE
        da.project_id = #{projectId}
        AND dap.repository IS NOT NULL
        OR (
        da.project_id IN
        <foreach collection="projectIds" item="project" open="(" separator="," close=")">
            #{project}
        </foreach>
        AND dam.share_level = 'organization'
        )
        OR dam.share_level = 'public'
    </select>
    <select id="queryByCommitSha" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT
        dav.*
        FROM
        devops_app_service_version dav
        WHERE
        dav.app_service_id = #{appServiceId}
        AND dav.version LIKE CONCAT(CONCAT('%', #{ref}))
        AND dav.`commit` = #{commit}
        AND dav.repository IS NOT NULL
    </select>

    <select id="listByAppIdAndEnvId" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT
        dav.id,
        dav.version
        FROM
        devops_app_service da,
        devops_app_service_instance dai,
        devops_env de,
        devops_app_service_version dav
        WHERE
        da.id = dai.app_service_id
        AND dav.repository IS NOT NULL
        AND de.id = dai.env_id
        AND dai.`status` = 'running'
        AND dai.app_service_version_id = dav.id
        AND de.project_id = #{projectId}
        AND de.id = #{envId}
        AND da.id = #{appServiceId}
        AND de.type ='user'
        GROUP BY
        dav.id,dav.version
    </select>

    <select id="queryValue" resultType="java.lang.String">
        SELECT
        davv.value
        FROM
        devops_app_service_version dav,
        devops_app_service_version_value davv
        WHERE
        dav.value_id = davv.id
        AND dav.id = #{versionId}
    </select>

    <select id="listByAppServiceIdAndVersion" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT
        *
        FROM (
        <if test="appServiceVersionId != null">
            (SELECT ver.id, ver.version, ver.creation_date,ver.repo_type,ver.last_update_date
            FROM devops_app_service_version ver
            WHERE ver.id = #{appServiceVersionId,jdbcType=BIGINT})
            UNION ALL
        </if>
        (
        SELECT distinct
        dav.id,
        dav.version,
        dav.creation_date,
        dav.repo_type,
        dav.last_update_date
        FROM
        devops_app_service_version dav
        <if test="share!=null and share==true">
            JOIN devops_app_service_share_rule dassr ON dassr.app_service_id = dav.app_service_id
            AND (
            dassr.share_level = 'organization'
            OR dassr.project_id = #{projectId}
            )
            AND (
            dassr.version = dav.version
            OR dav.version LIKE CONCAT('%', dassr.version_type, '%')
            )
        </if>
        WHERE
        dav.app_service_id = #{appServiceId}
        <if test="appServiceVersionId != null">
            AND dav.id != #{appServiceVersionId,jdbcType=BIGINT}
        </if>
        <choose>
            <when test="deployOnly!=null and deployOnly==true">
                AND dav.repository IS NOT NULL
            </when>
            <otherwise>
                AND dav.`commit` IS NOT NULL
            </otherwise>
        </choose>
        <include refid="sqlparam"/>
        <if test="version != null and version != ''">
            AND dav.version LIKE CONCAT('%', #{version}, '%')
        </if>
        )) tmp
        <choose>
            <when test="index != null and index !='' and appServiceVersionId!=null and appServiceVersionId!=''">
                ORDER BY tmp.id != ${appServiceVersionId}, tmp.last_update_date DESC
            </when>
            <when test="index != null and index !=''">
                ORDER BY tmp.last_update_date DESC
            </when>
        </choose>
    </select>

    <select id="listByAppServiceVersionIdForMarket" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT
        dav.id,
        dav.version,
        dav.publish_time,
        dav.creation_date,
        dav.app_service_id
        FROM
        devops_app_service_version dav
        WHERE
        dav.app_service_id = #{appServiceId}

        <if test='appServiceVersionIds != null and appServiceVersionIds.size > 0'>
            AND
            dav.id in
            <foreach collection="appServiceVersionIds" item="versionId" open="(" separator="," close=")">
                #{versionId}
            </foreach>
        </if>
        <include refid="sqlparam"/>
        <if test="version != null and version != ''">
            AND dav.version = #{version}
        </if>
        <if test="index != null and index !=''">
            ORDER BY dav.version desc
        </if>
    </select>


    <select id="listByAppServiceVersionIdForMarketBatch"
            resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT
        dav.id,
        dav.version,
        dav.creation_date,
        dav.app_service_id
        FROM
        devops_app_service_version dav
        WHERE
        <if test='appServiceIds != null and appServiceIds.size > 0'>
            dav.app_service_id in
            <foreach collection="appServiceIds" item="serviceId" open="(" separator="," close=")">
                #{serviceId}
            </foreach>
        </if>
        <if test='appServiceVersionIds != null and appServiceVersionIds.size > 0'>
            AND
            dav.id in
            <foreach collection="appServiceVersionIds" item="versionId" open="(" separator="," close=")">
                #{versionId}
            </foreach>
        </if>
        <include refid="sqlparam"/>
        <if test="version != null and version != ''">
            AND dav.version = #{version}
        </if>
        <if test="index != null and index !=''">
            ORDER BY dav.id DESC
        </if>
    </select>


    <sql id="sqlparam">
        <if test='searchParam != null'>
            <if test='searchParam.version != null and searchParam.version.length > 0'>
                AND dav.version LIKE CONCAT(CONCAT('%', #{searchParam.version, jdbcType=VARCHAR}),'%')
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                dav.version LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
            </foreach>
        </if>
    </sql>
    <select id="listAppServiceDeployedVersion" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT DISTINCT
        dav.id,
        dav.version
        FROM
        devops_app_service_version dav
        JOIN devops_app_service_instance dai ON dai.app_service_version_id = dav.id
        AND dai.`status` != 'deleted'
        JOIN devops_env de ON de.id = dai.env_id
        WHERE
        de.project_id = #{projectId}
        AND dav.repository IS NOT NULL
        AND dav.app_service_id = #{appServiceId}
        AND de.type ='user'
        ORDER BY
        dav.id DESC
    </select>

    <select id="listByPublished" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        select
        dav.id,
        dav.version,
        dav.creation_date
        from devops_app_service_version dav
        where dav.app_service_id = #{applicationId}
        AND dav.repository IS NOT NULL
        and dav.is_publish=1
    </select>

    <select id="listByAppServiceIdAndVersionIds" resultType="java.lang.Long">
        SELECT
        dav.id
        FROM
        devops_app_service_version dav
        JOIN devops_app_service da ON da.is_active = TRUE
        AND da.id = dav.app_service_id
        WHERE
        dav.app_service_id = #{applicationId}
        AND dav.repository IS NOT NULL
    </select>

    <select id="listUpgradeVersion" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT id, app_service_id, version,creation_date
        FROM
        devops_app_service_version
        WHERE
        app_service_id = (
        SELECT
        app_service_id
        FROM
        devops_app_service_version
        WHERE
        id = #{appServiceServiceId}
        )
        AND id > #{appServiceServiceId}
        ORDER BY id DESC
    </select>
    <select id="checkByProjectAndVersionId" resultType="java.lang.Integer">
        SELECT
        COUNT(0)
        FROM
        devops_app_service da
        JOIN devops_app_service_version dav ON dav.app_service_id = da.id
        WHERE
        da.project_id = #{projectId}
        AND dav.id = #{appServiceServiceId}
    </select>


    <select id="queryNewestVersion" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        select * from devops_app_service_version where app_service_id = #{appServiceId} order by id desc limit 1
    </select>


    <select id="listByAppServiceVersionIds" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT *
        FROM
        devops_app_service_version dav
        where 1=1
        AND dav.repository IS NOT NULL
        <if test="appServiceServiceIds != null">
            AND dav.id in
            <foreach collection="appServiceServiceIds" item="appServiceServiceIds" index="index"
                     open="(" close=")" separator=",">
                #{appServiceServiceIds}
            </foreach>
        </if>
    </select>

    <select id="listByAppServiceIdAndBranch" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT
        *
        FROM
        devops_app_service_version
        WHERE
        app_service_id = #{appServiceId} and commit is not null and version LIKE CONCAT(CONCAT('%',
        #{branch, jdbcType=VARCHAR}),'%')
        AND devops_app_service_version.repository IS NOT NULL
        order by id desc limit
        10
    </select>


    <select id="queryByPipelineId" resultType="java.lang.String">
        SELECT dav.version
        FROM devops_gitlab_pipeline dgp
                 LEFT JOIN devops_gitlab_commit dgc ON dgp.commit_id = dgc.id
                 LEFT JOIN devops_app_service_version dav
                           ON dav.`commit` = dgc.commit_sha and dav.app_service_id = #{appServiceId}
        WHERE dgp.pipeline_id = #{pipelineId}
          and dav.ref = #{branch}
        limit 1
    </select>

    <select id="queryValueByAppServiceId" resultType="java.lang.String">
        SELECT
        davv.value
        FROM
        devops_app_service_version dav
        LEFT JOIN devops_app_service_version_value davv
        ON davv.id = dav.value_id
        WHERE
        dav.app_service_id = #{appServiceId}
        ORDER BY dav.id DESC
        LIMIT 1
    </select>

    <update id="updateRepository">
        update devops_app_service_version set repository = CONCAT(#{helmUrl},repository);
    </update>

    <update id="updateObjectVersionNumber">
        update devops_app_service_version set object_version_number = 1 where id = #{versionId};
    </update>

    <update id="updatePublishTime">
        UPDATE devops_app_service_version dav
        SET dav.publish_time = dav.last_update_date
        WHERE
            dav.is_publish = 1
    </update>

    <select id="listShareVersionByAppId" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT DISTINCT
        davall.id,
        davall.app_service_id,
        davall.`commit`,
        davall.image,
        davall.version
        FROM
        (
        SELECT
        dav.app_service_id,
        dav.`commit`,
        dav.version,
        dav.id,
        dav.image
        FROM
        devops_app_service_version dav
        JOIN (
        SELECT
        dasr.version_type
        FROM
        devops_app_service_share_rule dasr
        WHERE
        dasr.app_service_id = #{appServiceId}
        AND dasr.version IS NULL
        ) dasr1 ON dav.version LIKE CONCAT(
        CONCAT('%', dasr1.version_type, '%')
        )
        AND dav.app_service_id = #{appServiceId}
        UNION
        SELECT
        dav.app_service_id,
        dav.`commit`,
        dav.version,
        dav.id,
        dav.image
        FROM
        devops_app_service_version dav
        JOIN (
        SELECT
        dasr.version
        FROM
        devops_app_service_share_rule dasr
        WHERE
        dasr.app_service_id = #{appServiceId}
        AND dasr.version IS NOT NULL
        ) dasr2 ON dav.version = dasr2.version
        AND dav.app_service_id = #{appServiceId}
        ) davall
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                WHERE davall.version LIKE CONCAT(CONCAT('%', #{param}, '%'))
            </foreach>
        </if>
    </select>


    <select id="listServiceVersionByAppServiceIds" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        <choose>
            <when test="share != null and share != ''">
                (SELECT version.*
                FROM devops_app_service_share_rule dassr
                LEFT JOIN devops_app_service_version version ON dassr.app_service_id = version.app_service_id
                WHERE dassr.app_service_id in
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
                <if test="share == 'share'">
                    and dassr.share_level = 'organization'
                </if>
                <if test="share == 'project'">
                    and dassr.share_level = 'project'
                    and dassr.project_id = #{projectId}
                </if>
                AND dassr.version IS NOT NULL
                AND dassr.version = version.version
                <if test="params != null and params != ''">
                    AND dassr.version LIKE CONCAT('%', CONCAT(#{params},'%'))
                </if>)
                UNION
                (
                SELECT version.*
                FROM devops_app_service_share_rule dassr
                LEFT JOIN devops_app_service_version version ON dassr.app_service_id = version.app_service_id
                WHERE dassr.app_service_id in
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
                <if test="share == 'share'">
                    and dassr.share_level = 'organization'
                </if>
                <if test="share == 'project'">
                    and dassr.share_level = 'project'
                    and dassr.project_id = #{projectId}
                </if>
                AND dassr.version IS NULL
                AND version.version LIKE CONCAT('%', CONCAT(dassr.version_type,'%'))
                <if test="params != null and params != ''">
                    AND dassr.version LIKE CONCAT('%', CONCAT(#{params},'%'))
                </if>
                )
            </when>
            <when test="share == null">
                select * from devops_app_service_version
                WHERE app_service_id in
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
                <if test="params != null and params != ''">
                    AND version LIKE CONCAT('%', CONCAT(#{params},'%'))
                </if>
            </when>
        </choose>
        order by id desc
    </select>

    <select id="queryServiceVersionByAppServiceIdAndShare"
            resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        select * from devops_app_service_version
        where app_service_id=#{appServiceId}
        <if test="share != null and share != ''">
            and version in(select version from devops_app_service_share_rule where app_service_id=#{appServiceId})
        </if>
        order by last_update_date desc
    </select>

    <select id="listVersions" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT
        dasv.id,
        dasv.version,
        dasv.app_service_id,
        dasv.harbor_config_id,
        dasv.repo_type,
        dasv.image,
        das. CODE AS appServiceCode,
        das.`name` AS appServiceName,
        das.type AS appServiceType,
        das.project_id AS projectId
        FROM
        devops_app_service_version dasv
        JOIN devops_app_service das ON das.id = dasv.app_service_id
        <if test="appServiceVersionIds!=null and appServiceVersionIds.size>0">
            WHERE dasv.id in
            <foreach collection="appServiceVersionIds" item="versionId"
                     open="(" separator="," close=")">
                #{versionId}
            </foreach>
        </if>

    </select>
    <delete id="deleteByIds">
        DELETE FROM devops_app_service_version
        where id in
        <foreach collection="versionIds" item="versionId"
                 open="(" separator="," close=")">
            #{versionId}
        </foreach>
    </delete>

    <select id="queryByShareVersion" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        select * from ((SELECT version.*
        FROM devops_app_service_share_rule dassr
        LEFT JOIN devops_app_service_version version ON dassr.app_service_id = version.app_service_id
        WHERE
        dassr.app_service_id = #{appServiceId}
        AND
        (
        dassr.share_level = 'organization'
        or (
        dassr.share_level = 'project'
        and dassr.project_id = #{projectId}) )
        AND dassr.version IS NOT NULL
        AND dassr.version = version.version
        )
        UNION
        (
        SELECT version.*
        FROM devops_app_service_share_rule dassr
        LEFT JOIN devops_app_service_version version ON dassr.app_service_id = version.app_service_id
        WHERE
        dassr.app_service_id = #{appServiceId}
        AND
        (
        dassr.share_level = 'organization'
        or (
        dassr.share_level = 'project'
        and dassr.project_id = #{projectId}) )
        AND dassr.version IS NULL
        AND version.version LIKE CONCAT('%', CONCAT(dassr.version_type,'%'))
        )) vss
        order BY vss.id desc
        LIMIT 1
    </select>

    <select id="selectAllAppServiceIdWithNullHarborConfig" resultType="long">
        SELECT
	       dasv.app_service_id
        FROM
	       devops_app_service_version dasv
        WHERE dasv.harbor_config_id IS NULL
          AND repo_type IS NULL
        GROUP BY
	      dasv.app_service_id
    </select>
    <select id="queryByCommitShaAndRef" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT *
        FROM devops_app_service_version dasv
        WHERE dasv.app_service_id = #{appServiceId} AND dasv.commit = #{commitSha} and dasv.ref = #{ref}
        order by id desc
        limit 1
    </select>

    <update id="updateDefaultHarborRecords">
        UPDATE
        devops_app_service_version
        SET harbor_config_id = NULL,
            repo_type = 'DEFAULT_REPO'
        WHERE harbor_config_id = #{defaultHarborId}
    </update>

    <update id="updateCustomHarborRecords">
        UPDATE
        devops_app_service_version
        SET repo_type = 'CUSTOM_REPO'
        WHERE harbor_config_id IS NOT NULL AND harbor_config_id != #{defaultHarborId}
    </update>

    <update id="updateNullHarborVersionToDefaultType">
        UPDATE
        devops_app_service_version
        SET repo_type = 'DEFAULT_REPO'
        WHERE app_service_id = #{appServiceId,jdbcType=BIGINT} AND harbor_config_id IS NULL
    </update>

    <update id="updateNullHarborVersionToCustomType">
        UPDATE
        devops_app_service_version
        SET repo_type = 'CUSTOM_REPO',
            harbor_config_id = #{configId,jdbcType=BIGINT}
        WHERE app_service_id = #{appServiceId,jdbcType=BIGINT} AND harbor_config_id IS NULL
    </update>

    <select id="pageShareVersionByAppServiceIdAndVersion"
            resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT DISTINCT
        davall.id,
        davall.app_service_id,
        davall.`commit`,
        davall.image,
        davall.version
        FROM
        (
        SELECT
        dav.app_service_id,
        dav.`commit`,
        dav.version,
        dav.id,
        dav.image
        FROM
        devops_app_service_version dav
        JOIN (
        SELECT
        dasr.version_type
        FROM
        devops_app_service_share_rule dasr
        WHERE
        dasr.app_service_id = #{appServiceId}
        AND dasr.version IS NULL
        ) dasr1 ON dav.version LIKE CONCAT(
        CONCAT('%', dasr1.version_type, '%')
        )
        AND dav.app_service_id = #{appServiceId}
        UNION
        SELECT
        dav.app_service_id,
        dav.`commit`,
        dav.version,
        dav.id,
        dav.image
        FROM
        devops_app_service_version dav
        JOIN (
        SELECT
        dasr.version
        FROM
        devops_app_service_share_rule dasr
        WHERE
        dasr.app_service_id = #{appServiceId}
        AND dasr.version IS NOT NULL
        ) dasr2 ON dav.version = dasr2.version
        AND dav.app_service_id = #{appServiceId}
        ) davall
        <if test='version != null'>
           WHERE davall.version LIKE CONCAT(CONCAT('%', #{version}, '%'))
        </if>
    </select>
</mapper>
