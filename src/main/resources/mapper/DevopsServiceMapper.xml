<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.DevopsServiceMapper">
    <select id="selectCountByOptions" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        devops_service ds,
        devops_app_service da
        WHERE
        ds.app_service_id = da.id
        AND ds.`name` = #{name}
        AND da.project_id = #{projectId}
        AND ds.env_id = #{envId}
        AND ds.`status` != 'deleted'
    </select>

    <select id="selectCountByName" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        (
        SELECT DISTINCT
        ds.id
        FROM
        (
        SELECT
        ds.*
        FROM
        devops_service ds
        INNER JOIN devops_env denv ON ds.env_id = denv.id
        WHERE
        denv.project_id = #{projectId}
        AND denv.type = 'user'
        AND ds.`status` != 'deleted'
        <if test="envId != null">
            AND ds.env_id = #{envId}
        </if>
        ) ds
        JOIN devops_env de ON ds.env_id = de.id
        LEFT JOIN devops_app_service da ON da.id = ds.app_service_id
        LEFT JOIN devops_service_instance dsai ON dsai.service_id = ds.id
        LEFT JOIN devops_app_service_instance dai
        ON (
        dai.id = dsai.instance_id
        or (dai.code = ds.target_instance_code and dai.env_id = ds.env_id)
        or (dai.app_service_id = ds.target_app_service_id and dai.env_id = ds.env_id)
        )
        WHERE
        1=1
        <if test="instanceId != null">
            AND dai.id = #{instanceId}
        </if>
        <if test="appServiceId != null">
            AND ds.app_service_id = #{appServiceId}
        </if>
        <include refid="sqlparam"/>
        ) t
    </select>

    <select id="listRunningService" resultType="io.choerodon.devops.infra.dto.DevopsServiceQueryDTO">
        SELECT
        ds.id,
        ds.`name`,
        ds.ports
        FROM
        devops_service ds
        WHERE ds.`status` = 'running'
        AND ds.env_id = #{envId}
        <if test="appServiceId != null">
            AND ds.app_service_id=#{appServiceId}
        </if>
    </select>


    <select id="listDevopsServiceByPage" resultMap="devopsServiceResult">
        SELECT
        ds.id,
        ds.`name`,
        ds.external_ip,
        ds.target_app_service_id,
        ds.load_balance_ip,
        ds.ports,
        ds.`status`,
        ds.`type`,
        ds.selectors,
        ds.end_points,
        ds.instance_id,
        da.id AS app_service_id,
        da.`name` AS app_service_name,
        de.id AS env_id,
        de.`name` AS env_name,
        de.`code` AS namespace,
        cmd.`status` commandStatus,
        cmd.command_type commandType,
        cmd.error error,
        da.project_id AS app_service_project_id,
        CASE
        WHEN ds.target_instance_code IS NULL THEN dsai.id
        ELSE dai.id
        END target_instance_id,
        CASE
        WHEN ds.target_instance_code IS NULL THEN dsai.code
        ELSE ds.target_instance_code
        END ins_code,
        CASE
        WHEN dai.status IS NULL THEN 'deleted'
        ELSE dai.status
        END ins_status
        FROM
        (
        SELECT
        devs.*
        FROM
        devops_service devs
        INNER JOIN devops_env denv ON devs.env_id = denv.id
        WHERE
        denv.project_id = #{projectId}
        AND denv.type = 'user'
        AND devs.`status` != 'deleted'
        <if test="envId != null">
            AND devs.env_id = #{envId}
        </if>
        ) ds
        JOIN devops_env de ON ds.env_id = de.id
        LEFT JOIN devops_env_command cmd ON ds.command_id = cmd.id
        LEFT JOIN devops_app_service da ON (da.id = ds.app_service_id or da.id=ds.app_service_id)
        LEFT JOIN devops_service_instance dsai ON dsai.service_id = ds.id
        LEFT JOIN devops_app_service_instance dai
        ON (
        dai.id = dsai.instance_id
        or (dai.code = ds.target_instance_code and dai.env_id = ds.env_id)
        or dai.app_service_id = ds.target_app_service_id
        )
        WHERE 1
        <if test="instanceId != null">
            AND dai.id = #{instanceId}
        </if>
        <if test="appServiceId != null">
            AND ds.app_service_id = #{appServiceId}
        </if>
        <include refid="sqlparam"/>
        <if test="sort != null and !sort.isEmpty()">
            ORDER BY ${sort}
        </if>
    </select>

    <select id="queryById" resultMap="devopsServiceResult">
        SELECT
        ds.id,
        ds.`name`,
        ds.external_ip,
        ds.selectors,
        ds.target_app_service_id,
        da.project_id app_service_project_id,
        ds. ports,
        ds.end_points,
        ds.`status`,
        ds.`type`,
        da.id AS app_service_id,
        da.`name` AS app_service_name,
        de.id AS env_id,
        de.`name` AS env_name,
        CASE
          WHEN ds.target_instance_code IS NULL THEN dsai.id
          ELSE dai.id
        END instance_id,
        ds.last_update_date,
        ds.creation_date,
        ds.created_by,
        ds.last_updated_by,
        de.code AS env_code,
        (SELECT detail.message
         FROM devops_env_resource resource
                  LEFT JOIN devops_env_resource_detail detail ON resource.resource_detail_id = detail.id
         WHERE resource.kind = 'Service'
           AND resource.name = ds.name
           AND env_id = resource.env_id
         LIMIT 1
        # 使用LIMIT 1是因为表设计原因，根据多个实例创建的网络会有多条记录，但是message是一样的
        ) AS message,
        CASE
          WHEN ds.target_instance_code IS NULL THEN dsai.code
          ELSE ds.target_instance_code
        END ins_code,
        (SELECT count(1)
         FROM devops_env_pod dp
         WHERE dp.instance_id = dai.id) pod_count,
        (SELECT count(1)
         FROM devops_env_pod dp
         WHERE dp.instance_id = dai.id
           AND dp.`status` = 'Running'
           AND dp.is_ready = TRUE) pod_running_count,
        dai.last_update_date AS ins_last_update_date,
        dai.object_version_number AS ins_object_version_number,
        CASE
          WHEN dai.status IS NULL THEN 'deleted'
          ELSE dai.status
        END ins_status,
        command.status AS commandStatus,
        command.command_type AS commandType,
        command.error
        FROM
        devops_service ds
        INNER JOIN devops_env de ON ds.env_id = de.id
        LEFT JOIN devops_service_instance dsai ON dsai.service_id = ds.id
        LEFT JOIN devops_app_service_instance dai
                ON (
                dai.id = dsai.instance_id
                or (dai.code = ds.target_instance_code and dai.env_id = ds.env_id)
                or (dai.app_service_id = ds.target_app_service_id and dai.env_id = ds.env_id)
                )
        LEFT JOIN devops_app_service da ON (da.id = dai.app_service_id or da.id=ds.app_service_id)
        LEFT JOIN devops_env_command command ON ds.command_id = command.id
        WHERE
        ds.id = #{id}
        AND ds.`status` != 'deleted'
    </select>

    <select id="selectDeployedEnv" resultType="java.lang.Long">
        SELECT DISTINCT
        env_id
        FROM
        devops_service
        WHERE
        `status` = 'running';
    </select>

    <resultMap id="devopsServiceResult" type="io.choerodon.devops.infra.dto.DevopsServiceQueryDTO">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="externalIp" column="external_ip"/>
        <result property="ports" column="ports"/>
        <result property="status" column="status"/>
        <result property="appServiceId" column="app_service_id"/>
        <result property="appServiceName" column="app_service_name"/>
        <result property="targetAppServiceId" column="target_app_service_id"/>
        <result property="appServiceProjectId" column="app_service_project_id"/>
        <result property="loadBalanceIp" column="load_balance_ip"/>
        <result property="type" column="type"/>
        <result property="envId" column="env_id"/>
        <result property="commandStatus" column="commandStatus"/>
        <result property="commandType" column="commandType"/>
        <result property="error" column="error"/>
        <result property="envName" column="env_name"/>
        <result property="envCode" column="env_code"/>
        <result property="selectors" column="selectors"/>
        <result property="endPoints" column="end_points"/>
        <result property="createdBy" column="created_by"/>
        <result property="instanceId" column="instance_id"/>
        <result property="creationDate" column="creation_date"/>
        <result property="lastUpdatedBy" column="last_updated_by"/>
        <result property="lastUpdateDate" column="last_update_date"/>
        <collection property="instances" ofType="io.choerodon.devops.infra.dto.AppServiceInstanceInfoDTO" notNullColumn="ins_code">
            <result column="target_instance_id" property="id" jdbcType="VARCHAR"/>
            <result column="ins_code" property="code" jdbcType="VARCHAR"/>
            <result column="ins_status" property="status" jdbcType="VARCHAR"/>
            <result column="ins_object_version_number" property="objectVersionNumber" jdbcType="VARCHAR"/>
            <result column="ins_last_update_date" property="lastUpdateDate" jdbcType="VARCHAR"/>
            <result property="podRunningCount" column="pod_running_count"/>
            <result property="podCount" column="pod_count"/>
        </collection>
    </resultMap>

    <sql id="sqlparam">
        <if test='searchParam != null'>
            <if test='searchParam.name != null and searchParam.name.length > 0'>
                AND
                    ds.`name` LIKE CONCAT(CONCAT('%', #{searchParam.name, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.appServiceName != null and searchParam.appServiceName.length > 0'>
                AND
                    da.`name` LIKE CONCAT(CONCAT('%', #{searchParam.appServiceName, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.envName != null and searchParam.envName.length > 0'>
                AND
                    de.`name` LIKE CONCAT(CONCAT('%', #{searchParam.envName, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.envCode != null and searchParam.envCode.length > 0'>
                AND
                    de.code LIKE CONCAT(CONCAT('%', #{searchParam.envCode, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.externalIp != null and searchParam.externalIp.length > 0'>
                AND
                    ds.external_ip LIKE CONCAT(CONCAT('%', #{searchParam.externalIp, jdbcType=VARCHAR}),'%')
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                (ds.`name` LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR da.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR de.`name` LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR de.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR ds.external_ip LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%') )
            </foreach>
        </if>
    </sql>

    <select id="checkEnvContainingService" resultType="java.lang.Boolean">
        SELECT
        COUNT( 1 ) > 0 exist
        FROM
        devops_service
        WHERE
        env_id = #{envId}
        AND `status` != 'deleted';
    </select>

    <select id="countNonDeletedServiceWithEnv" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM devops_service ds
        WHERE ds.id = #{serviceId}
        <if test="envId !=null">
            AND ds.env_id = #{envId}
        </if>
          AND ds.status != 'deleted'
    </select>


    <update id="updateSelectorsToNull">
        UPDATE devops_service ds
        SET ds.selectors = null
        WHERE ds.id = #{serviceId}
    </update>

    <update id="updateEndPointToNull">
        UPDATE devops_service ds
        SET ds.end_points = null
        WHERE ds.id = #{serviceId}
    </update>

    <update id="updateTargetAppServiceIdToNull">
        UPDATE devops_service ds
        SET ds.target_app_service_id = null
        WHERE ds.id = #{serviceId}
    </update>

    <update id="updateTargetInstanceCodeToNull">
        UPDATE devops_service ds
        SET ds.target_instance_code = null
        WHERE ds.id = #{serviceId}
    </update>

    <update id="setExternalIpNull">
        UPDATE devops_service ds
        SET ds.external_ip = null
        WHERE ds.id = #{serviceId}
    </update>

    <delete id="deleteServiceInstance">
        DELETE FROM devops_service_instance
        WHERE service_id IN
        <foreach collection="serviceIds" item="serviceId" open="(" separator="," close=")">
            #{serviceId}
        </foreach>
    </delete>

    <update id="updateStatus">
        UPDATE devops_service ds
        SET ds.status=#{status}
        WHERE ds.id = #{serviceId}
    </update>

    <update id="updateAppServiceIdToNull">
        UPDATE devops_service ds
        SET ds.app_service_id = NULL
        WHERE ds.id = #{serviceId}
    </update>

    <!-- 此处取值使用'$'而不是'#'是为了取集合的值，同时也不存在SQL注入的问题-->
    <select id="isAllServicesInTheAppService" resultType="boolean">
        SELECT COUNT(1) = ${serviceIds.size}
        FROM devops_service ds
        WHERE ds.app_service_id = #{appServiceId}
          AND ds.id IN
        <foreach collection="serviceIds" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
</mapper>
