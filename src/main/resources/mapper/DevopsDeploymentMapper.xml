<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.devops.infra.mapper.DevopsDeploymentMapper">
    <select id="selectCountByEnvIdAndName" resultType="int">
        SELECT COUNT(*) FROM devops_deployment dd
        WHERE dd.env_id=#{envId} AND dd.name=#{name}
    </select>

    <select id="listByEnvId" resultType="io.choerodon.devops.api.vo.DevopsDeploymentVO">
        select dd.*, der.id as env_resource_id, der.resource_detail_id, deco.command_type, deco.`status` AS
        command_status, deco.error
        from devops_deployment dd
        left join devops_env_resource der on (dd.env_id = der.env_id and dd.name = der.name and der.kind = 'Deployment')
        left join devops_env_command deco ON (deco.id = dd.command_id)
        <where>
            dd.env_id = #{envId}
            <if test="name != null">
                and dd.name like CONCAT(CONCAT('%', #{name, jdbcType=VARCHAR}),'%')
            </if>
            <if test="fromInstance != null">
                <if test="fromInstance == true">
                    and dd.instance_id is not null
                </if>
                <if test="fromInstance==false">
                    and dd.instance_id is null
                </if>
            </if>
        </where>
    </select>

    <select id="queryDeployGroupInfoById" resultType="io.choerodon.devops.api.vo.DevopsDeployGroupVO">
        SELECT ddace.name AS name,
               ddp.name AS code,
        ddp.app_config AS appConfigJson,
        ddp.container_config AS containerConfigJson,
        ddp.env_id AS envId
        FROM devops_deployment ddp
        JOIN devops_deploy_app_center_env ddace ON ddace.id = ddp.instance_id
        WHERE ddp.id=#{id}
    </select>

    <select id="queryByDeploymentIdWithResourceDetail" resultType="io.choerodon.devops.api.vo.DevopsDeploymentVO">
        select dd.*,
        der.id        as env_resource_id,
        der.resource_detail_id,
        deco.command_type,
        deco.`status` AS command_status,
        deco.error
        from devops_deployment dd
        left join devops_env_resource der
        on (dd.env_id = der.env_id and dd.name = der.name and der.kind = 'Deployment')
        left join devops_env_command deco ON (deco.id = dd.command_id)
        WHERE dd.id=#{deploymentId}
    </select>
</mapper>