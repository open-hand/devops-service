<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.devops.infra.mapper.CiCdPipelineMapper">
    <update id="disablePipeline">
         update devops_cicd_pipeline set is_enabled = false
        where id = #{ciCdPipelineId}
    </update>
    <update id="enablePipeline">
        update devops_cicd_pipeline set is_enabled = true
        where id = #{ciCdPipelineId}
    </update>


    <select id="queryByProjectIdAndName" resultType="io.choerodon.devops.api.vo.CiCdPipelineVO">
        SELECT
        dcp.id,dcp.`name`,dcp.is_enabled AS enabled, dcp.app_service_id,dcp.project_id,
        das.`name` AS app_service_name, das.gitlab_project_id, dcp.image,dcp.last_update_date,
        dcp.last_updated_by,dcp.creation_date
        FROM devops_cicd_pipeline dcp
        INNER JOIN devops_app_service das ON dcp.app_service_id = das.id
        <if test="status != null">
            left join (select * from devops_pipeline_record_rel order by id desc limit 1) ldprr on ldprr.pipeline_id =
            dcp.id
            left join devops_ci_pipeline_record dcpr on dcpr.id = ldprr.ci_pipeline_record_id
            left join devops_cd_pipeline_record dcpr2 on dcpr2.id = ldprr.cd_pipeline_record_id
        </if>
        <where>
            dcp.project_id = #{projectId}
            <if test="searchParam != null">
                and (das.name like CONCAT(CONCAT('%', #{searchParam}),'%')
                or das.code like CONCAT(CONCAT('%', #{searchParam}),'%')
                or dcp.name like CONCAT(CONCAT('%', #{searchParam}),'%')
                )
            </if>
            <if test="appServiceIds!=null and appServiceIds.size>0">
                and dcp.app_service_id in
                <foreach collection="appServiceIds" item="appServiceId" index="index"
                         open="(" close=")" separator=",">
                    #{appServiceId}
                </foreach>
            </if>
            <if test="enableFlag!=null">
                and dcp.is_enabled = #{enableFlag}
            </if>
            <if test="status != null">
                <choose>
                    <when test="status != null and status == 'not_audit'">
                        and dcpr2.status = 'not_audit'
                    </when>
                    <when test="status != null and status == 'success'">
                        and (
                        dcpr2.status = 'success'
                        or (dcpr2.status = null and dcpr.status = 'success')
                        )
                    </when>
                    <when test="status != null and status == 'skipped'">
                        and (dcpr2.status = 'skipped'
                        or dcpr.status = 'skipped'
                        or (dcpr2.status = null and dcpr.status = null)
                        )
                    </when>
                    <when test="status != null and status == 'failed'">
                        and (dcpr2.status = 'failed' or dcpr.status = 'failed' )
                    </when>

                    <otherwise>
                        and (dcpr2.status = #{status} or dcpr.status = #{status} )
                    </otherwise>
                </choose>
            </if>
        </where>
        ORDER BY dcp.id DESC
    </select>

    <select id="listPipelineNameByTaskConfigId" resultType="java.lang.String">
        SELECT dp.name
        FROM devops_cicd_pipeline dp
                     JOIN devops_cd_job dcj ON dp.id = dcj.pipeline_id
                     JOIN devops_cd_api_test_info dcati ON dcati.id = dcj.deploy_info_id
        WHERE dcati.api_test_config_id = #{taskConfigId}
    </select>
</mapper>