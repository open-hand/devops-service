<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.AppServiceInstanceMapper">
    <select id="queryInfoById" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceInfoDTO">
      SELECT ins.id,
      ins.code,
      ins.status,
      ins.source,
      ins.last_updated_by,
      ddace.name AS name,
      env.id AS environmentId,
      env.project_id,
      env.check_values_policy AS checkValuesPolicy,
      (SELECT count(1)
      FROM devops_env_pod dp
      WHERE dp.instance_id = ins.id) pod_count,
      (SELECT count(1)
      FROM devops_env_pod dp
      WHERE dp.instance_id = ins.id
      AND dp.`status` = 'Running'
      AND dp.is_ready = TRUE) pod_running_count,
      ins.app_service_id,
      ins.app_service_version_id,
      ins.effect_command_id,
               effect.object_version_id AS     effect_command_version_id,
               effect.status            AS     effect_command_status,
               (
                       SELECT effect_version.version
                       FROM devops_app_service_version effect_version
                       WHERE effect_version.id = effect.object_version_id
                       )                AS     effect_command_version,
               version.version          as     version_name,
               das.name                 as     app_service_name,
               ins.env_id,
               ins.last_update_date,
               ins.object_version_number,
               env.cluster_id,
               cmd.`status`                    commandStatus,
               cmd.object_version_id           commandVersionId,
               (
                       select ndav.version
                       from devops_app_service_version ndav
                       where ndav.id = cmd.object_version_id
                       )                       commandVersion,
               cmd.command_type                commandType,
               cmd.error                       error
        FROM devops_app_service_instance ins
                     JOIN devops_deploy_app_center_env ddace ON ddace.object_id = ins.id
                     LEFT JOIN devops_app_service_version version ON ins.app_service_version_id = version.id
                     LEFT JOIN devops_app_service das ON ins.app_service_id = das.id
                     LEFT JOIN devops_env env ON ins.env_id = env.id
                     LEFT JOIN devops_env_command cmd ON cmd.id = ins.command_id
                     LEFT JOIN devops_env_command effect ON ins.effect_command_id = effect.id
        WHERE ins.id = #{instanceId}
          AND ddace.rdupm_type = 'chart'
    </select>

    <select id="listInstanceInfoByEnvAndOptions" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceInfoDTO">
        SELECT ins.id,
               ins.code,
               ins.status,
               ins.source,
               env.cluster_id,
               (SELECT count(1)
                FROM devops_env_pod dp
                WHERE dp.instance_id = ins.id) pod_count,
               (SELECT count(1)
                FROM devops_env_pod dp
                WHERE dp.instance_id = ins.id
                  AND dp.`status` = 'Running'
                  AND dp.is_ready = TRUE)      pod_running_count,
               ins.app_service_id,
               ins.app_service_version_id,
               ins.last_update_date,
               ins.object_version_number,
               version.version       as        version_name,
               das.name              as        app_service_name,
               env.project_id        AS        project_id,
               cmd.error,
               cmd.command_type,
               cmd.status            as        command_status,
               cmd.object_version_id as        command_version_id,
               (
                       select ndav.version
                       from devops_app_service_version ndav
                       where ndav.id = cmd.object_version_id
                       )                       commandVersion
        FROM devops_app_service_instance ins
                     LEFT JOIN devops_env env ON ins.env_id = env.id
                     LEFT JOIN devops_app_service_version version ON ins.app_service_version_id = version.id
                     LEFT JOIN devops_app_service das ON ins.app_service_id = das.id
                     LEFT JOIN devops_env_command cmd ON cmd.id = ins.command_id
                WHERE ins.env_id = #{envId}
                  AND ins.status != 'deleted'
        <include refid="infoSqlParam"/>
    </select>

    <sql id="infoSqlParam">
        <if test='searchParam != null'>
            <if test='searchParam.code != null'>
                AND ins.`code` LIKE CONCAT(CONCAT('%', #{searchParam.code, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.appServiceName != null'>
                AND das.`name` LIKE CONCAT(CONCAT('%', #{searchParam.appServiceName, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.appServiceVersionName != null'>
                AND version.version LIKE CONCAT(CONCAT('%', #{searchParam.appServiceVersionName, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.podCount != null'>
                AND
                (
                SELECT
                count(1)
                FROM
                devops_env_pod dp
                WHERE
                dp.instance_id = ins.id
                ) = #{searchParam.podCount, jdbcType=BIGINT}
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                (ins.`code` LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR das.`name` LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR version.version LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%'))
            </foreach>
        </if>
    </sql>

    <select id="listApplicationInstance" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceDTO">
        SELECT dai.id                           id,
               dai.`code`                       code,
               dam.share_level                  publishLevel,
               da.id                            appServiceId,
               da.project_id                    projectId,
               da.code as                       appServiceCode,
               da.`name`                        appServiceName,
               dav.version                      appServiceVersion,
               dav.id                           appServiceVersionId,
               de.id                            envId,
               dai.status                       status,
               de.`code`                        envCode,
               de.`name`                        envName,
               (
                       SELECT count(1)
                       FROM devops_env_pod dp
                       WHERE dp.instance_id = dai.id
                         AND dp.namespace = de.code
                         AND de.id = dai.env_id
                       )                        podCount,
               (
                       SELECT count(1)
                       FROM devops_env_pod dp
                       WHERE dp.instance_id = dai.id
                         AND dp.`status` = 'Running'
                         AND dp.is_ready = TRUE
                         AND dp.namespace = de.code
                         AND de.id = dai.env_id
                       )                        podRunningCount,
               (select count(1)
                from devops_service ds
                             left join devops_service_instance dsi on ds.id = dsi.service_id
                where dsi.instance_id = dai.id) serviceCount,
               (
                       SELECT count(distinct dip.ingress_id)
                       FROM devops_ingress_path dip
                                    JOIN devops_service_instance dsi ON dip.service_id = dsi.service_id
                       where dsi.instance_id = dai.id
                       )                        ingressCount,
               dai.object_version_number,
               cmd.`status`                     commandStatus,
               cmd.object_version_id            commandVersionId,
               (
                       select ndav.version
                       from devops_app_service_version ndav
                       where ndav.id = cmd.object_version_id
                       )                        commandVersion,
               cmd.command_type                 commandType,
               cmd.error                        error
        FROM devops_app_service_instance dai
                     JOIN devops_env de ON dai.env_id = de.id
                     JOIN devops_app_service da ON da.id = dai.app_service_id
                     LEFT JOIN devops_app_service_version dav ON dai.app_service_version_id = dav.id
                     LEFT JOIN devops_env_command cmd ON cmd.id = dai.command_id
                     LEFT JOIN devops_app_service_share_rule dam ON dam.app_service_id = da.id
                WHERE de.project_id = #{projectId}
                  AND dai.`status` != 'deleted'
        <include refid="sqlparam"/>
        <choose>
            <when test="instanceId != null and instanceId != ''">
                ORDER BY dai.id not in (#{instanceId}), dai.id DESC
            </when>
            <otherwise>
                ORDER BY dai.id DESC
            </otherwise>
        </choose>
    </select>


    <select id="listApplicationInstanceCode" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceDTO">
        SELECT dai.id      id,
               dai.`code`  CODE,
               dav.version appServiceVersion
        FROM devops_app_service_instance dai,
             devops_app_service da,
             devops_env de,
             devops_app_service_version dav
                WHERE
                dai.app_service_id = da.id
                  AND dai.env_id = de.id
                  AND dai.`status` = 'running'
                  AND de.project_id = #{projectId}
                  AND dai.app_service_version_id = dav.id
        <if test="envId != null">
            AND dai.env_id = #{envId}
        </if>
        <if test="versionId != null">
            AND dai.app_service_version_id = #{versionId}
        </if>
        <if test="appServiceId != null">
            AND dai.app_service_id = #{appServiceId}
        </if>
        ORDER BY dai.id DESC
    </select>

    <select id="listRunningAndFailedInstance" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceDTO">
        SELECT dai.id      id,
               dai.`code`  CODE,
               dav.version appServiceVersion,
               dav.id      appServiceVersionId
        FROM devops_app_service_instance dai,
             devops_app_service da,
             devops_env de,
             devops_app_service_version dav,
             devops_env_command dc
                WHERE
                dai.app_service_id = da.id
                  AND dai.command_id = dc.id
                  AND dai.env_id = de.id
                  AND dai.`status` in ('running', 'failed')
                  AND de.project_id = #{projectId}
                  AND dc.object_version_id = dav.id
        <if test="envId != null">
            AND dai.env_id = #{envId}
        </if>
        <if test="appServiceId != null">
            AND dai.app_service_id = #{appServiceId}
        </if>
        ORDER BY dai.id DESC
    </select>


    <select id="countByOptions" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM devops_app_service_instance dai
                WHERE 1 = 1
        <if test="envId != null">
            AND dai.env_id = #{envId}
        </if>
        <if test="appServiceId != null">
            AND dai.app_service_id = #{appServiceId}
        </if>
        <if test="appServiceInstanceCode != null">
            AND dai.code = #{appServiceInstanceCode}
        </if>
    </select>

    <select id="queryValueByInstanceId" resultType="java.lang.String">
        SELECT dv.
                       VALUE

        FROM (
                     SELECT dai.id      instance_id,
                            de.id       commandId,
                            de.value_id value_id
                     FROM devops_env_command de,
                          devops_app_service_instance dai
                     WHERE de.object_id = dai.id
                       AND de.object_id = #{instanceId}
                       AND de.object = 'instance'
                     ORDER BY de.creation_date DESC
                     LIMIT 1
                     ) r,
             devops_env_command_value dv
        WHERE r.value_id = dv.id
    </select>

    <select id="queryLastCommandVersionValueByInstanceId" resultType="java.lang.String">
        SELECT dasvv.value
        FROM (SELECT de.object_version_id
              FROM devops_app_service_instance dai
                           LEFT JOIN devops_env_command de ON dai.id = de.object_id
              WHERE dai.id = #{instanceId,jdbcType=BIGINT}
                AND de.object = 'instance'
              ORDER BY de.id DESC
              LIMIT 1) r
                     INNER JOIN devops_app_service_version dasv ON r.object_version_id = dasv.id
                     INNER JOIN devops_app_service_helm_version dashv on dashv.app_service_version_id = dasv.id
                     INNER JOIN devops_app_service_version_value dasvv ON dashv.value_id = dasvv.id
    </select>
    <select id="queryLastCommandId" resultType="java.lang.Long">
        SELECT de.id
        FROM devops_app_service_instance dai
                     LEFT JOIN devops_env_command de ON dai.id = de.object_id
        WHERE dai.id = #{instanceId}
          AND de.object = 'instance'
        ORDER BY de.id DESC
        LIMIT 1
    </select>

    <sql id="sqlparam">
        <if test="envId != null">
            AND de.id = #{envId}
        </if>
        <if test="versionId != null">
            AND dav.id = #{versionId}
        </if>
        <if test="appServiceId != null">
            AND da.id = #{appServiceId}
        </if>
        <if test='searchParam != null'>
            <if test='searchParam.code != null and searchParam.code.length > 0'>
                AND dai.`code` LIKE CONCAT(CONCAT('%', #{searchParam.code, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.appServiceName != null and searchParam.appServiceName.length > 0'>
                AND da.`name` LIKE CONCAT(CONCAT('%', #{searchParam.appServiceName, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.version != null and searchParam.version.length > 0'>
                AND dav.version LIKE CONCAT(CONCAT('%', #{searchParam.version, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.status != null and searchParam.status.length > 0'>
                AND dai.status LIKE CONCAT(CONCAT('%', #{searchParam.status, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.envCode != null and searchParam.envCode.length > 0'>
                AND de.`code` LIKE CONCAT(CONCAT('%', #{searchParam.envCode, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.envName != null and searchParam.envName.length > 0'>
                AND de.`name` LIKE CONCAT(CONCAT('%', #{searchParam.envName, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.podCount != null'>
                AND (
                SELECT
                count(1)
                FROM
                devops_env_pod dp
                WHERE
                dp.instance_id = dai.id
                ) = #{searchParam.podCount, jdbcType=BIGINT}
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                (dai.`code` LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR da.`name` LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR dav.version LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR dai.status LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR de.`code` LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR de.`name` LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%'))
            </foreach>
        </if>
    </sql>

    <select id="listApplicationInstanceOverView"
            resultType="io.choerodon.devops.infra.dto.AppServiceInstanceOverViewDTO">
        SELECT da.id             appServiceId,
               dam.share_level   publishLevel,
               da.`code`         appServiceCode,
               da.`name`         appServiceName,
               de.project_id     projectId,
               dav.id            versionId,
               dai.id            instanceId,
               dai.status        instanceStatus,
               dai.`code`        instanceCode,
               dav.version       version,
               dav.creation_date versionCreationDate,
               de.id             envId
        FROM devops_app_service da
                     JOIN devops_app_service_version dav ON dav.app_service_id = da.id
                     JOIN devops_app_service_instance dai ON dai.app_service_version_id = dav.id
                AND dai.status != 'deleted'
                     JOIN devops_env de ON de.id = dai.env_id
                     LEFT JOIN devops_app_service_share_rule dam ON dam.app_service_id = da.id
                WHERE
                de.project_id = #{projectId}
        <if test="appServiceId != null">
            AND da.id = #{appServiceId}
        </if>
        <if test="envIds != null">
            AND de.id in
            <foreach collection="envIds" item="envIds" index="index"
                     open="(" close=")" separator=",">
                #{envIds}
            </foreach>
        </if>
        <if test="envIds == null">
            AND de.id is null
        </if>
        ORDER BY da.last_update_date DESC,
                 dav.creation_date DESC,
                 dai.last_update_date DESC;
    </select>

    <select id="listDeployTime" resultType="io.choerodon.devops.infra.dto.DeployDTO">
        select dai.code    appServiceInstanceCode,
               da.code     appServiceCode,
               da.name     appServiceName,
               dav.version appServiceVersion,
               cmd.creation_date,
        cmd.status status,
        cmd.error error,
        cmd.last_update_date,
        cmd.last_updated_by,
        cmd.created_by
        from devops_app_service_instance dai
        JOIN devops_app_service da ON dai.app_service_id = da.id
        JOIN devops_app_service_version dav ON dai.app_service_version_id = dav.id
        JOIN devops_env de ON de.id = dai.env_id
        LEFT JOIN devops_env_command cmd on dai.id = cmd.object_id
        where de.project_id = #{projectId}
        and cmd.command_type in ('create', 'update')
        and cmd.`status` not in
        ('doing', 'operating')
        and cmd.object = 'instance'
        and dai.status != 'deleted'
        <if test="startTime != null">
            AND cmd.creation_date >= CONCAT('', '${startTime}', ' 00:00:00')
        </if>
        <if test="endTime != null">
            AND cmd.creation_date <![CDATA[<=]]> CONCAT('', '${endTime}', ' 23:59:59')
        </if>
        <if test="envId != null">
            AND de.id = #{envId}
        </if>
        <if test="appServiceIds != null">
            AND da.id in
            <foreach collection="appServiceIds" item="appServiceIds" index="index"
                     open="(" close=")" separator=",">
                #{appServiceIds}
            </foreach>
        </if>
        order by cmd.last_update_date DESC
    </select>

    <select id="listDeployFrequency" resultType="io.choerodon.devops.infra.dto.DeployDTO">
        select dai.code     appServiceInstanceCode,
               da.code      appServiceCode,
               da.name      appServiceName,
               (
                       SELECT dav.version
                       FROM devops_app_service_version dav
                       WHERE dav.id = cmd.object_version_id
                       ) AS appServiceVersion,
               cmd.creation_date,
               cmd.error    error,
               cmd.status   status,
               cmd.last_update_date,
               cmd.last_updated_by,
               cmd.created_by
        from devops_app_service_instance dai
                     JOIN devops_app_service da ON dai.app_service_id = da.id
                     JOIN devops_env de ON de.id = dai.env_id
                     LEFT JOIN devops_env_command cmd on dai.id = cmd.object_id
                where cmd.command_type in ('create', 'update')
                  and cmd.`status` not in ('doing', 'operating')
                  and cmd.object = 'instance'
                  and dai.status != 'deleted'
        <if test="projectId != null">
            AND de.project_id = #{projectId}
        </if>
        <if test="startTime != null">
            AND cmd.creation_date >= CONCAT('', '${startTime}', ' 00:00:00')
        </if>
        <if test="endTime != null">
            AND cmd.creation_date <![CDATA[<=]]> CONCAT('', '${endTime}', ' 23:59:59')
        </if>
        <if test="appServiceId != null">
            AND da.id = #{appServiceId}
        </if>
        <if test="envIds != null">
            AND de.id in
            <foreach collection="envIds" item="envIds" index="index"
                     open="(" close=")" separator=",">
                #{envIds}
            </foreach>
        </if>
        order by cmd.creation_date DESC
    </select>

    <select id="getInstanceResourceDetailJson" resultType="java.lang.String">
        SELECT detail.message
        FROM devops_app_service_instance ins
                     INNER JOIN devops_env_resource re ON ins.id = re.instance_id
                     INNER JOIN devops_env_resource_detail detail ON re.resource_detail_id = detail.id
        WHERE ins.id = #{instanceId}
          AND re.kind = #{resourceType}
          AND re.name = #{resourceName};
    </select>


    <select id="checkCodeExist" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM devops_app_service_instance dasi
        JOIN devops_env de ON de.id=dasi.env_id
        WHERE dasi.code=#{code}
        AND de.id=#{envId}
    </select>


<!--    <delete id="deleteInstanceRelInfo">-->
<!--        DELETE-->
<!--            devops_env_command,devops_command_event,devops_env_command_log,devops_env_command_value-->
<!--        FROM devops_env_command-->
<!--                     LEFT JOIN devops_command_event ON devops_env_command.id = devops_command_event.command_id-->
<!--                     LEFT JOIN devops_env_command_log ON devops_env_command.id = devops_env_command_log.command_id-->
<!--                     LEFT JOIN devops_env_command_value ON devops_env_command.value_id = devops_env_command_value.id-->
<!--        WHERE devops_env_command.object_id = #{instanceId}-->
<!--          AND devops_env_command.object = 'instance'-->
<!--    </delete>-->

    <select id="countNonDeletedInstances" resultType="java.lang.Integer">
        SELECT COUNT(1)
                FROM devops_app_service_instance ins
        <if test="projectId != null">
            INNER JOIN devops_env de ON ins.env_id = de.id
        </if>
        WHERE ins.app_service_id = #{appServiceId}
          AND ins.status != 'deleted'
        <if test="projectId != null">
            AND de.project_id = #{projectId}
        </if>
    </select>

    <select id="countNonDeletedInstancesWithEnv" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM devops_app_service_instance ins
                WHERE ins.id = #{instanceId}
        <if test="envId != null">
            AND ins.env_id = #{envId}
        </if>
        AND ins.status != 'deleted'
    </select>

    <update id="updateStatus">
        UPDATE devops_app_service_instance
        SET status=#{status}
        WHERE id = #{instanceId}
    </update>

    <select id="listByProjectIdsAndAppServiceId" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceDTO">
        select ins.*
        from devops_app_service_instance ins
                     left join devops_env env on env.id = ins.env_id
                where
                env.project_id in
        <foreach collection="projectIds" item="projectId" open="(" separator=" , " close=")">
            #{projectId}
        </foreach>
        AND ins.app_service_id = #{appServiceId}
    </select>

    <select id="queryOtherInstancesOfComponents" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceDTO">
        SELECT dasi.*
        FROM devops_app_service_instance dasi
        WHERE dasi.env_id = #{envId,jdbcType=BIGINT}
          AND dasi.component_chart_name = #{componentChartName,jdbcType=VARCHAR}
          AND dasi.code != #{instanceCode}
    </select>

    <select id="countInstanceByCondition" resultType="java.lang.Integer">
        SELECT COUNT(dasi.id)
        FROM devops_app_service_instance dasi
                WHERE dasi.env_id = #{envId}
        <if test="status != null and status != ''">
            and dasi.status = #{status}
        </if>
        <if test="appServiceId != null">
            and dasi.app_service_id = #{appServiceId}
        </if>
    </select>

    <select id="queryInstancesWithAppServiceByIds"
            resultType="io.choerodon.devops.api.vo.polaris.InstanceWithPolarisStorageVO">
        SELECT dasi.id   AS instance_id,
               dasi.code AS instance_code,
               das.id    AS app_service_id,
               das.name  AS app_service_name,
               das.code  AS app_service_code
        FROM devops_app_service_instance dasi
                     LEFT JOIN devops_app_service das ON dasi.app_service_id = das.id
                WHERE dasi.id IN
        <foreach collection="instanceIds" item="instanceId" open="(" close=")" separator=",">
            #{instanceId,jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="queryByInstanceIds" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceDTO">
        SELECT dasi.*
        FROM devops_app_service_instance dasi
                WHERE dasi.id IN
        <foreach collection="instanceIds" item="instanceId" open="(" close=")" separator=",">
            #{instanceId,jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="queryVersion" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT dasv.*
        FROM devops_app_service_instance dasi
                 INNER JOIN devops_env_command command ON dasi.command_id = command.id
                 INNER JOIN devops_app_service_version dasv ON command.object_version_id = dasv.id
        WHERE dasi.id = #{appServiceInstanceId};
    </select>
    <select id="queryVersionByAppId" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT dasv.*
        FROM devops_app_service_instance dasi
                 INNER JOIN devops_env_command command ON dasi.command_id = command.id
                 INNER JOIN devops_app_service_version dasv ON command.object_version_id = dasv.id
        WHERE dasv.app_service_id  = #{appServiceId};
    </select>
    <select id="queryEffectVersionByAppId" resultType="io.choerodon.devops.infra.dto.AppServiceVersionDTO">
        SELECT dasv.*
        FROM devops_app_service_instance dasi
                 INNER JOIN devops_env_command command ON dasi.effect_command_id = command.id
                 INNER JOIN devops_app_service_version dasv ON command.object_version_id = dasv.id
        WHERE dasv.app_service_id  = #{appServiceId};
    </select>
    <select id="listAppInstanceByAppSvcIdAndEnvId"
            resultType="io.choerodon.devops.api.vo.application.ApplicationInstanceInfoVO">
        select dasi.*, dasv.version
        from devops_app_service_instance dasi
        left join devops_app_service_version dasv on dasi.app_service_version_id = dasv.id
        where dasi.app_service_id = #{appServiceId} and dasi.env_id = #{envId};
    </select>

    <select id="listInstanceByDeployDetailsCode" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceDTO">
        SELECT
            *
        FROM devops_app_service_instance
        WHERE env_id = #{envId}
        AND code IN
        <foreach collection="codes" item="code" separator="," open="(" close=")">
            #{code}
        </foreach>
    </select>

    <select id="queryInstanceStatusByEnvIdAndCode" resultType="java.lang.String">
        SELECT
            status
        FROM devops_app_service_instance
        WHERE env_id = #{envId}
        AND code = #{code}
    </select>

    <select id="countInstance" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM devops_app_service_instance
    </select>

    <select id="listInstances" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceDTO">
        SELECT de.project_id,
               dasi.code,
               dasi.env_id,
               dasi.id,
               dasi.app_service_id,
               dasi.source
        FROM devops_app_service_instance dasi
                     JOIN devops_env de ON de.id = dasi.env_id
    </select>

    <select id="listInfoById" resultType="io.choerodon.devops.infra.dto.AppServiceInstanceInfoDTO">
        SELECT ins.id,
            ins.code,
            ins.status,
            ins.source,
            ddace.name AS name,
            env.id     AS environmentId,
            env.project_id,
            (SELECT count(1)
            FROM devops_env_pod dp
            WHERE dp.instance_id = ins.id) pod_count,
            (SELECT count(1)
            FROM devops_env_pod dp
            WHERE dp.instance_id = ins.id
            AND dp.`status` = 'Running'
            AND dp.is_ready = TRUE) pod_running_count,
            ins.app_service_id,
            ins.app_service_version_id,
            ins.effect_command_id,
            effect.object_version_id AS     effect_command_version_id,
            effect.status   AS              effect_command_status,
            (
            SELECT effect_version.version
            FROM devops_app_service_version effect_version
            WHERE effect_version.id = effect.object_version_id
            )       AS              effect_command_version,
            version.version as              version_name,
            das.name        as              app_service_name,
            ins.env_id,
            ins.last_update_date,
            ins.object_version_number,
            env.cluster_id,
            cmd.`status`                    commandStatus,
            cmd.object_version_id           commandVersionId,
            (
            select ndav.version
            from devops_app_service_version ndav
            where ndav.id = cmd.object_version_id
            )                       commandVersion,
            cmd.command_type                commandType,
            cmd.error error
        FROM devops_app_service_instance ins
        JOIN devops_deploy_app_center_env ddace ON ddace.object_id = ins.id
        LEFT JOIN devops_app_service_version version ON ins.app_service_version_id = version.id
        LEFT JOIN devops_app_service das ON ins.app_service_id = das.id
        LEFT JOIN devops_env env ON ins.env_id = env.id
        LEFT JOIN devops_env_command cmd ON cmd.id = ins.command_id
        LEFT JOIN devops_env_command effect ON ins.effect_command_id = effect.id
        WHERE ins.id in
        <foreach collection="instanceIds" item="instanceId" open="(" close=")" separator=",">
            #{instanceId, jdbcType=BIGINT}
        </foreach>
        AND ddace.rdupm_type = 'chart'
    </select>

    <select id="listMarketInstance" resultType="io.choerodon.devops.api.vo.AppServiceInstanceVO">
        SELECT id,app_service_id FROM devops_app_service_instance dasi
        WHERE
        <if test="envId != null">
            dasi.env_id=#{envId}
            AND
        </if>
        source IN
        ('middleware','market')
    </select>
    <select id="countInstanceDeploying" resultType="java.lang.Integer">
        select count(*)
        from devops_app_service_instance dasi
                 join devops_env_command dec2 on dasi.command_id = dec2.id and dec2.status = 'operating'
        where dasi.id = #{instanceId}
    </select>

    <update id="updateSyncDeployValueId">
        UPDATE devops_app_service_instance
        SET sync_deploy_value_id=#{syncDeployValueId}
        WHERE id = #{instanceId}
    </update>

    <select id="listInstanceByValueId" resultType="io.choerodon.devops.api.vo.AppServiceInstanceVO">
        SELECT
            dasi.*,
            ddace.NAME
        FROM
            devops_app_service_instance dasi
                JOIN devops_deploy_app_center_env ddace ON ddace.object_id = dasi.id
                AND ddace.rdupm_type = 'chart'
        WHERE
            dasi.env_id = #{envId}
          AND dasi.app_service_id = #{appServiceId}
          <if test="params!=null">
              AND  ddace.NAME LIKE CONCAT(CONCAT('%', #{params, jdbcType=VARCHAR}),'%')
          </if>
    </select>
</mapper>
