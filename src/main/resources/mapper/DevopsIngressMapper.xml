<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.DevopsIngressMapper">
    <select id="listInstanceNamesByIngressId" resultType="java.lang.String">
        SELECT svc.target_instance_code
        FROM devops_ingress_path path
                 INNER JOIN devops_service svc ON path.service_id = svc.id
        WHERE path.ingress_id = #{ingressId}
        AND svc.target_instance_code IS NOT NULL
    </select>

    <select id="listIngressNameByServiceId" resultType="java.lang.String">
        SELECT
        di. NAME
        FROM
        devops_ingress di,
        (
        SELECT
        *
        FROM
        devops_ingress_path dip
        WHERE
        service_id = #{serviceId}
        ) r
        WHERE
        di.id = r.ingress_id
        GROUP BY
        di. NAME
    </select>

    <select id="queryById" resultType="io.choerodon.devops.infra.dto.DevopsIngressDTO">
        SELECT di.id                         id,
               di.project_id                 projectId,
               di.env_id                     envId,
               di.`name`                     name,
               di.`domain`                   domain,
               di.status,
               di.is_usable                  isUsable,
               di.cert_id                    certId,
               di.annotations                annotations,
               de.`name`                     envName,
               cmd.`status`                  commandStatus,
               cmd.command_type              commandType,
               cmd.error                     error,
               de.`code`                     namespace,
               di.last_update_date,
               di.last_updated_by,
               di.creation_date,
               di.created_by,
               (SELECT derd.message
                FROM devops_env_resource der
                         LEFT JOIN devops_env_resource_detail derd ON der.resource_detail_id = derd.id
                WHERE der.env_id = di.env_id
                  AND der.kind = 'Ingress'
                  AND der.name = di.name) AS message
        FROM devops_ingress di
                 LEFT JOIN devops_env de on de.id = di.env_id
                 LEFT JOIN devops_env_command cmd on di.command_id = cmd.id
        WHERE di.id = #{id}
        AND de.type = 'user'
    </select>

    <select id="listIngressByOptions" resultType="io.choerodon.devops.infra.dto.DevopsIngressDTO">
        SELECT DISTINCT
        di.id id,
        di.project_id projectId,
        di.env_id envId,
        di.`name` name,
        di.`domain` domain,
        di.status,
        di.is_usable isUsable,
        di.cert_id certId,
        di.instance_id,
        de.`name` envName,
        cmd.`status` commandStatus,
        cmd.command_type  commandType,
        cmd.error  error,
        de.`code` namespace
        FROM
        devops_ingress di
        JOIN devops_ingress_path dip ON dip.ingress_id = di.id
        JOIN devops_env de on de.id = di.env_id
        LEFT JOIN devops_env_command cmd on di.command_id = cmd.id
        LEFT JOIN devops_service ds on ds.id = dip.service_id
        WHERE di.project_id = #{projectId}
        AND de.type = 'user'
        <if test="envId != null">
            AND de.id = #{envId}
        </if>
        <if test="serviceId != null">
            AND ds.id = #{serviceId}
        </if>
        <if test='searchParam != null'>
            <if test='searchParam.domain != null and searchParam.domain.length > 0'>
                AND
                    di.domain LIKE CONCAT(CONCAT('%', #{searchParam.domain, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.name != null and searchParam.name.length > 0'>
                AND
                    di.name LIKE CONCAT(CONCAT('%', #{searchParam.name, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.envName != null and searchParam.envName.length > 0'>
                AND
                    de.name LIKE CONCAT(CONCAT('%', #{searchParam.envName, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.envCode != null and searchParam.envCode.length > 0'>
                AND
                    de.code LIKE CONCAT(CONCAT('%', #{searchParam.envCode, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.path != null and searchParam.path.length > 0'>
                AND
                    dip.path LIKE CONCAT(CONCAT('%', #{searchParam.path, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.serviceName != null and searchParam.serviceName.length > 0'>
                AND
                    ds.name LIKE CONCAT(CONCAT('%', #{searchParam.serviceName, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.ingressId != null'>
                AND
                    di.id = #{searchParam.ingressId}
            </if>
            <if test='searchParam.envId != null'>
                AND
                    di.env_id = #{searchParam.envId}
            </if>
            <if test='searchParam.serviceId != null'>
                AND
                    ds.id = #{searchParam.serviceId}
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                (di.domain LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR di.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR de.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR de.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR dip.path LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR ds.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%'))
            </foreach>
        </if>
    </select>

    <select id="checkEnvHasIngress" resultType="java.lang.Boolean">
        SELECT
        COUNT( 1 ) > 0 exist
        FROM
        devops_ingress
        WHERE
        env_id = #{envId};
    </select>

    <update id="updateStatus">
        UPDATE devops_ingress
        SET status=#{status}
        WHERE env_id = #{envId}
          AND name = #{name}
    </update>
</mapper>
