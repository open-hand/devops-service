<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.DevopsMergeRequestMapper">
    <select id="getByProjectIdAndState" resultType="io.choerodon.devops.infra.dto.DevopsMergeRequestDTO">
        SELECT *
        FROM devops_merge_request
        WHERE gitlab_project_id = #{projectId}
          AND state = #{state}
    </select>


    <select id="listBySourceBranch" resultType="io.choerodon.devops.infra.dto.DevopsMergeRequestDTO">
        SELECT dmr.*,das.project_id
        FROM devops_merge_request dmr
            JOIN devops_app_service das ON dmr.gitlab_project_id=das.gitlab_project_id
        WHERE dmr.gitlab_project_id = #{projectId}
          AND dmr.source_branch = #{branchName}
        ORDER by id desc
    </select>


    <select id="countMergeRequest" resultType="io.choerodon.devops.infra.dto.DevopsMergeRequestDTO">
        SELECT count(id)                                               total,
               count(CASE WHEN dmr.state = 'merged' THEN 'merged' END) merged,
               count(CASE WHEN dmr.state = 'closed' THEN 'closed' END) closed,
               count(CASE WHEN dmr.state = 'opened' THEN 'opened' END) opened,
               (SELECT COUNT(1)
                FROM devops_merge_request tmp
                             LEFT JOIN devops_user du ON tmp.assignee_id = du.gitlab_user_id
                WHERE du.iam_user_id = #{iamUserId}
                  AND tmp.gitlab_project_id = #{projectId}
                  AND tmp.state = 'opened') AS                         audit_count
        FROM devops_merge_request dmr
        where dmr.gitlab_project_id = #{projectId}
    </select>

    <delete id="deleteByProjectId">
        DELETE
        FROM devops_merge_request
        WHERE gitlab_project_id = #{projectId}
    </delete>

    <select id="listToBeAuditedByThisUser" resultType="io.choerodon.devops.infra.dto.DevopsMergeRequestDTO">
        SELECT dmr.*
        FROM devops_merge_request dmr
                     LEFT JOIN devops_user du ON dmr.assignee_id = du.gitlab_user_id
        WHERE du.iam_user_id = #{iamUserId}
          AND dmr.gitlab_project_id = #{projectId}
          AND dmr.state = 'opened'
    </select>

    <select id="listToBeAuditedByThisUserUnderProjectIds"
            resultType="io.choerodon.devops.infra.dto.DevopsMergeRequestDTO">
        SELECT dmr.*, das.project_id
        FROM devops_merge_request dmr
                     LEFT JOIN devops_user du ON dmr.assignee_id = du.gitlab_user_id
                     LEFT JOIN devops_app_service das ON dmr.gitlab_project_id = das.gitlab_project_id
                WHERE du.iam_user_id = #{iamUserId}
                  AND dmr.state = 'opened'
                  AND dmr.gitlab_project_id IN
        <foreach collection="gitlabProjectIds" item="gitlabProjectId" separator="," open="(" close=")">
            #{gitlabProjectId}
        </foreach>
    </select>

    <select id="listLatestUseAppServiceIdAndDate" resultType="io.choerodon.devops.api.vo.LatestAppServiceVO">
        SELECT id, max(last_update_date) AS last_update_date
        FROM (SELECT das.id, dmr.last_update_date
              FROM devops_merge_request dmr
              JOIN devops_app_service das ON dmr.gitlab_project_id = das.gitlab_project_id
        WHERE dmr.last_updated_by = #{userId} and dmr.last_update_date > #{time}
          AND das.project_id IN
        <foreach collection="projectIds" item="projectId" open="(" close=")" separator=",">
            #{projectId}
        </foreach>
        ) t
        GROUP BY id, last_update_date

    </select>

    <delete id="deleteByGitlabProjectIdAndMergeRequestIdNotInIds">
        DELETE
        FROM devops_merge_request
        WHERE gitlab_project_id = #{gitlabProjectId}
        AND gitlab_merge_request_id NOT IN
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="countMergedBranchesByName" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM devops_merge_request dmr
                WHERE dmr.gitlab_project_id = #{gitlabProjectId}
                  AND dmr.state = 'merged'
                  AND dmr.source_branch IN
        <foreach collection="branchNames" item="branchName" open="(" close=")" separator=",">
            #{branchName}
        </foreach>
    </select>

    <select id="listMergeRequestToBeChecked" resultType="io.choerodon.devops.api.vo.MergeRequestVO">
        SELECT dmr.title,
               dmr.author_id,
               dmr.assignee_id,
               dmr.created_at,
               dmr.gitlab_merge_request_id,
               das.id AS app_service_id,
               das.name AS app_service_name,
               das.code AS app_service_code
        FROM devops_merge_request dmr
                     INNER JOIN devops_app_service das ON das.gitlab_project_id = dmr.gitlab_project_id
                WHERE das.project_id = #{projectId}
        <if test="appServiceIds != null">
            AND das.id IN
            <foreach collection="appServiceIds" item="appServiceId" open="(" close=")" separator=",">
                #{appServiceId}
            </foreach>
        </if>
        <if test="param != null and param != ''">
            AND (das.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}), '%')
                    OR das.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}), '%'))
        </if>
        ORDER BY dmr.created_at DESC
    </select>
</mapper>


