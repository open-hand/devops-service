<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.DevopsClusterMapper">
    <select id="listByProjectId" resultType="io.choerodon.devops.infra.dto.DevopsClusterDTO">
        select dc.id,dc.status,dc.`name`,dc.skip_check_project_permission from devops_cluster dc where dc.skip_check_project_permission is true and
        dc.organization_id = #{organizationId}
        UNION ALL
        select dc.id,dc.status,dc.`name`,dc.skip_check_project_permission from devops_cluster dc
        join devops_cluster_pro_rel dcp on dc.id = dcp.cluster_id
        where dcp.project_id = #{projectId}
    </select>

    <update id="updateSkipCheckPro">
        UPDATE devops_cluster dc set dc.skip_check_project_permission = #{skipCheckPro} where dc.id = #{clusterId}
    </update>

    <select id="listClusters" resultType="io.choerodon.devops.infra.dto.DevopsClusterDTO">
        SELECT
        *
        FROM devops_cluster dc
        where dc.project_id = #{projectId}
        <include refid="sqlparam"/>
    </select>

    <sql id="sqlparam">
        <if test='searchParam != null'>
            <if test='searchParam.code != null and searchParam.code.length > 0'>
                AND
                dc.code LIKE CONCAT(CONCAT('%', #{searchParam.code, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.name != null and searchParam.name.length > 0'>
                AND
                dc.name LIKE CONCAT(CONCAT('%', #{searchParam.name, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.description != null and searchParam.description.length > 0'>
                AND
                dc.name LIKE CONCAT(CONCAT('%', #{searchParam.description, jdbcType=VARCHAR}),'%')
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                (dc.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR dc.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR dc.description LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                )
            </foreach>
        </if>
    </sql>

    <select id="pageQueryPodsByNodeName" resultType="io.choerodon.devops.infra.dto.DevopsEnvPodDTO">
        SELECT pod.*
        FROM devops_env_pod pod
        INNER JOIN devops_app_service_instance instance ON pod.instance_id = instance.id
        INNER JOIN devops_env env ON instance.env_id = env.id
        INNER JOIN devops_cluster cluster ON env.cluster_id = cluster.id
        WHERE cluster.id = #{clusterId}
        AND pod.node_name = #{nodeName}
        <if test='searchParam != null'>
            <if test='searchParam.name != null and searchParam.name.length > 0'>
                AND pod.name LIKE CONCAT(CONCAT('%', #{searchParam.name, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.namespace != null and searchParam.namespace.length > 0'>
                AND pod.namespace LIKE CONCAT(CONCAT('%', #{searchParam.namespace, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.status != null and searchParam.status.length > 0'>
                AND pod.status LIKE CONCAT(CONCAT('%', #{searchParam.status, jdbcType=VARCHAR}),'%')
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                (pod.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR pod.namespace LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR pod.status LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                )
            </foreach>
        </if>
    </select>

    <update id="updateProjectId">
        UPDATE devops_cluster dc
        SET dc.project_id = #{proId}
        WHERE
            dc.organization_id = #{orgId}
    </update>
    <update id="updateClusterStatusToOperating">
        UPDATE devops_cluster dc
        SET dc.status = 'operating'
        WHERE dc.id = #{clusterId} and dc.status != 'operating'
    </update>

    <select id="listAllClustersToMigrate" resultType="io.choerodon.devops.infra.dto.DevopsClusterDTO">
        SELECT devops_cluster.*
        FROM devops_cluster
        WHERE project_id IS NULL
    </select>

    <select id="queryClusterForUpdate" resultType="io.choerodon.devops.infra.dto.DevopsClusterDTO">
        SELECT *
        FROM devops_cluster
        WHERE id = #{clusterId,jdbcType=BIGINT}
        FOR UPDATE;
    </select>
    <select id="queryClusterIdBySystemEnvId" resultType="java.lang.Long">
        SELECT dc.id FROM devops_cluster dc WHERE dc.system_env_id=#{systemEnvId}
    </select>
    <select id="listByOrganizationId" resultType="io.choerodon.devops.infra.dto.DevopsClusterDTO">
        SELECT
        dc.id
        FROM
        devops_cluster dc
        WHERE dc.organization_id=#{organizationId}
    </select>

    <select id="countByOptions" resultType="int">
        SELECT COUNT(1)
        FROM devops_cluster dc
        WHERE 1 = 1
        <if test="organizationId != null">
            AND dc.organization_id = #{organizationId,jdbcType=BIGINT}
        </if>
        <if test="projectId != null">
            AND dc.project_id = #{projectId,jdbcType=BIGINT}
        </if>
    </select>

    <select id="listByClusterIds" resultType="io.choerodon.devops.infra.dto.DevopsClusterDTO">
        SELECT * FROM devops_cluster dc
        WHERE dc.id IN
        <foreach collection="clusterIds" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="listByProject" resultType="io.choerodon.devops.infra.dto.DevopsClusterDTO">
        SELECT
            *
        FROM devops_cluster dc
        WHERE
        dc.organization_id = #{organizationId}
        AND dc.project_id IN
        <foreach collection="projectIds" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
</mapper>